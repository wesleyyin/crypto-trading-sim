{"ast":null,"code":"var _jsxFileName = \"/Users/work/Documents/GitHub/minimalist_social_media/minesse/src/components/user-profile.component.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class UserProfile extends Component {\n  constructor(props) {\n    super(props);\n    this.updateConnection = this.updateConnection.bind(this);\n    this.renderHead = this.renderHead.bind(this);\n    this.renderContent = this.renderContent.bind(this);\n    this.renderConnectStatus = this.renderConnectStatus.bind(this);\n    this.reqConnect = this.reqConnect.bind(this);\n    this.connect = this.connect.bind(this);\n    this.disconnect = this.disconnect.bind(this);\n    this.state = {\n      userID: '',\n      viewedUser: '',\n      posts: [],\n      connectionStatus: 'none',\n      currPost: 0,\n      connectionID: ''\n    };\n  }\n\n  componentDidMount() {\n    const user = localStorage.getItem(\"username\");\n    alert(user);\n\n    if (user.length == 0) {\n      alert(\"you are not logged in\");\n      window.location.href = '/login';\n    }\n\n    const username = user;\n    const userData = {\n      username: username\n    };\n    console.log(userData);\n    axios.post(\"http://localhost:5000/users/findname\", userData).then(function (res) {\n      if (res.data.status) {\n        let id = res.data.user._id;\n        this.setState({\n          userID: id\n        });\n        const viewedUser = this.props.match.params.username;\n        const viewedUserData = {\n          username: viewedUser\n        };\n        axios.post(\"http://localhost:5000/users/findname\", viewedUserData).then(function (ret) {\n          if (ret.data.status) {\n            this.setState({\n              viewedUser: ret.data.user\n            });\n            this.updateConnection();\n            const byUser = this.state.viewedUser._id;\n            const byuserData = {\n              user: byUser\n            };\n            axios.post(\"http://localhost:5000/posts/byuser\", byuserData).then(function (res) {\n              this.setState({\n                posts: res.data\n              });\n              console.log(this.state.posts);\n            }.bind(this)).catch(err => console.log('Error: ' + err));\n          } else {\n            alert('user not found');\n            window.location.href = '/search';\n          }\n        }.bind(this)).catch(err => console.log('Error: ' + err));\n      } else {\n        alert(res.data.msg);\n        window.location.href = '/login';\n      }\n    }.bind(this)).catch(err => console.log('Error: ' + err));\n  }\n\n  updateConnection() {\n    const userA = String(this.state.userID);\n    const userB = String(this.state.viewedUser._id);\n    console.log(userA);\n    console.log(userB);\n    const connectData = {\n      userA: userA,\n      userB: userB\n    };\n    axios.post(\"http://localhost:5000/connections/byusers\", connectData).then(function (res) {\n      const status = res.data.status;\n      alert(status);\n\n      if (this.state.connectionStatus != status) {\n        this.setState({\n          connectionStatus: status\n        });\n\n        if (status != \"not connected\") {\n          this.setState({\n            connectionID: res.data.id\n          });\n        }\n      }\n    }.bind(this)).catch(err => console.log('Error: ' + err));\n  }\n\n  renderHead() {\n    const nameDisplay = this.props.match.params.username;\n    const bio = this.state.viewedUser.bio;\n    const pfp = this.state.viewedUser.profilePic;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: pfp,\n        alt: \"Profile Pic\",\n        id: \"pfp\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        id: \"profName\",\n        children: nameDisplay\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"bio\",\n        children: bio\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 17\n    }, this);\n  }\n\n  renderConnectStatus() {\n    const status = this.state.connectionStatus;\n\n    if (status == 'connected') {\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.disconnect,\n        children: \"Disconnect\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 21\n      }, this);\n    } else if (status == 'self') {\n      //display edit head button\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          window.href = \"/edit-profile\";\n        },\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 21\n      }, this);\n    } else if (status == 'requested') {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Requested\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 20\n      }, this);\n    } else if (status == 'pending') {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [this.props.match.params.username, \" wants to connect with you\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.connect,\n          children: \"Accept\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.disconnect,\n          children: \"Decline\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 13\n      }, this); //display accept/decline buttons\n    } else {\n      //display connect button\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.reqConnect,\n        children: \"Connect\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 21\n      }, this);\n    }\n  }\n\n  disconnect() {\n    axios.delete(\"http://localhost:5000/connections/\" + this.state.connectionID).then(function (res) {\n      alert(res.data);\n      this.updateConnection();\n    }.bind(this)).catch(err => console.log('Error: ' + err));\n  }\n\n  connect() {\n    axios.post(\"http://localhost:5000/connections/accept/\" + this.state.connectionID).then(function (res) {\n      alert(res.data);\n      this.updateConnection();\n    }.bind(this)).catch(err => console.log('Error: ' + err));\n  }\n\n  reqConnect() {\n    const userA = this.state.userID;\n    const userB = this.state.viewedUser._id;\n    const connectData = {\n      userA: userA,\n      userB: userB\n    };\n    axios.post(\"http://localhost:5000/connections/add\", connectData).then(function (res) {\n      alert(res.data);\n      this.updateConnection();\n    }.bind(this)).catch(err => console.log('Error: ' + err));\n  }\n\n  renderContent() {\n    const status = this.state.connectionStatus;\n\n    if (status == 'connected') {\n      //display posts in feed format\n      const post = this.state.posts[this.state.currPost];\n      return /*#__PURE__*/_jsxDEV(\"img\", {\n        src: '..../backend/images_uploads/' + '56dc0856-e40b-4a84-99ac-29f2d7fa580b-1617840702580.jpeg'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 21\n      }, this);\n    } else if (status == 'self') {\n      //display posts in feed format with edit/delete permissions\n      const post = this.state.posts[this.state.currPost];\n      return /*#__PURE__*/_jsxDEV(\"img\", {\n        src: './test.jpeg'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 21\n      }, this);\n    } else {\n      //do not display posts\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Connect with \", this.props.match.params.username, \" to view their posts\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 20\n      }, this);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(this.renderHead, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(this.renderConnectStatus, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(this.renderContent, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 9\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/work/Documents/GitHub/minimalist_social_media/minesse/src/components/user-profile.component.js"],"names":["React","Component","axios","Link","UserProfile","constructor","props","updateConnection","bind","renderHead","renderContent","renderConnectStatus","reqConnect","connect","disconnect","state","userID","viewedUser","posts","connectionStatus","currPost","connectionID","componentDidMount","user","localStorage","getItem","alert","length","window","location","href","username","userData","console","log","post","then","res","data","status","id","_id","setState","match","params","viewedUserData","ret","byUser","byuserData","catch","err","msg","userA","String","userB","connectData","nameDisplay","bio","pfp","profilePic","delete","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport {Link} from 'react-router-dom';\n\n\nexport default class UserProfile extends Component{\n    constructor(props){\n        super(props)\n\n        \n        this.updateConnection = this.updateConnection.bind(this);\n        this.renderHead = this.renderHead.bind(this);\n        this.renderContent = this.renderContent.bind(this);\n        this.renderConnectStatus = this.renderConnectStatus.bind(this);\n\n        this.reqConnect = this.reqConnect.bind(this);\n        this.connect = this.connect.bind(this);\n        this.disconnect = this.disconnect.bind(this);\n\n        this.state = {\n            userID : '',\n            viewedUser: '',\n            posts :[],\n            connectionStatus : 'none',\n            currPost : 0,\n            connectionID : ''\n        };\n\n    }\n    \n    componentDidMount(){\n        const user = localStorage.getItem(\"username\");\n        alert(user);\n        if (user.length ==0) {\n            alert(\"you are not logged in\");\n          window.location.href = '/login';\n        }\n        const username = user;\n        const userData = {\n            username  : username,\n        }\n        console.log(userData);\n        \n        \n        axios.post(\"http://localhost:5000/users/findname\", userData)\n            .then(function(res){\n                \n                if(res.data.status){\n                    let id = res.data.user._id\n                    this.setState({\n                        userID:id\n                    });\n                    const viewedUser = this.props.match.params.username;\n                    const viewedUserData = {\n                        username: viewedUser\n                    };\n                    axios.post(\"http://localhost:5000/users/findname\", viewedUserData)\n                        .then(function(ret){\n                            if(ret.data.status){\n                                this.setState({\n                                    viewedUser: ret.data.user\n                                });this.updateConnection();\n                               const byUser = this.state.viewedUser._id;\n                               const byuserData = {\n                                   user: byUser\n                               }\n                                axios.post(\"http://localhost:5000/posts/byuser\", byuserData)\n                                    .then(function(res){\n                                        this.setState({\n                                            posts: res.data\n                                        });\n                                        console.log(this.state.posts);\n                                    }.bind(this)) \n                                    .catch(err => console.log('Error: ' + err));\n\n                            }else{\n                                alert('user not found');\n                                window.location.href = '/search';\n                            }\n                        }.bind(this)) \n                        .catch(err => console.log('Error: ' + err));\n                }else{\n                    alert(res.data.msg);\n                    window.location.href = '/login';\n                }\n            }.bind(this))\n            .catch(err => console.log('Error: ' + err));\n    }\n    updateConnection(){\n        const userA = String(this.state.userID);\n        const userB = String(this.state.viewedUser._id);\n        console.log(userA);\n        console.log(userB);\n        const connectData = {\n            userA : userA,\n            userB: userB\n        };\n        axios.post(\"http://localhost:5000/connections/byusers\", connectData)\n            .then(function(res){\n                const status = res.data.status;\n                alert(status);\n                if(this.state.connectionStatus!=status){\n                    this.setState({\n                        connectionStatus: status\n                    });\n                    if(status!=\"not connected\"){\n                        this.setState({\n                            connectionID : res.data.id\n                        });\n                    }\n                }\n            }.bind(this))\n            .catch(err => console.log('Error: ' + err));\n    }\n    \n    \n    renderHead(){\n        const nameDisplay = this.props.match.params.username;\n        const bio = this.state.viewedUser.bio;\n        const pfp = this.state.viewedUser.profilePic;\n        return (<div>\n            <img src={pfp} alt =\"Profile Pic\" id = \"pfp\"/>\n            <h1 id = \"profName\">{nameDisplay}</h1>\n            <p id = \"bio\">{bio}</p>\n        </div>);\n    }\n     \n    renderConnectStatus(){\n        const status = this.state.connectionStatus;\n        if(status=='connected'){\n            return (<button onClick = {this.disconnect}>Disconnect</button>);\n        }else if(status =='self'){\n            //display edit head button\n            return (<button onClick = {()=>{window.href = \"/edit-profile\"}}>Edit</button>);\n        }else if(status =='requested'){\n            return(<p>Requested</p>)\n        }else if(status =='pending'){\n            return (\n            <div>\n                <p>{this.props.match.params.username} wants to connect with you</p>\n                <button onClick = {this.connect}>Accept</button>\n                <button onClick = {this.disconnect}>Decline</button>\n            </div>\n            \n                )\n            //display accept/decline buttons\n        }else{\n            //display connect button\n            return (<button onClick = {this.reqConnect}>Connect</button>);\n        }\n    }\n    disconnect(){\n        \n        axios.delete(\"http://localhost:5000/connections/\" + this.state.connectionID)\n        .then(function(res){\n            alert(res.data);\n            this.updateConnection();\n        }.bind(this))\n        .catch(err => console.log('Error: ' + err));\n    }\n    connect(){\n        axios.post(\"http://localhost:5000/connections/accept/\" + this.state.connectionID)\n        .then(function(res){\n            alert(res.data);\n            this.updateConnection();\n        }.bind(this))\n        .catch(err => console.log('Error: ' + err));\n    }\n    reqConnect(){\n        const userA = this.state.userID;\n        const userB = this.state.viewedUser._id;\n        const connectData = {\n            userA: userA,\n            userB: userB,\n        };\n        axios.post(\"http://localhost:5000/connections/add\", connectData)\n            .then(function(res){\n                alert(res.data);\n                this.updateConnection();\n            }.bind(this))\n            .catch(err => console.log('Error: ' + err));\n    }\n    renderContent(){\n        const status = this.state.connectionStatus;\n        \n       \n        if(status=='connected'){\n            //display posts in feed format\n            const post = this.state.posts[this.state.currPost];\n            return (<img src = {'..../backend/images_uploads/' + '56dc0856-e40b-4a84-99ac-29f2d7fa580b-1617840702580.jpeg'}/>);\n            \n        }else if(status =='self'){\n            //display posts in feed format with edit/delete permissions\n            const post = this.state.posts[this.state.currPost];\n            return (<img src = {'./test.jpeg'}/>);\n        }else{\n            //do not display posts\n            return(<p>Connect with {this.props.match.params.username} to view their posts</p>);\n        }\n    }\n\n    render(){\n        return (\n        <div>\n            <this.renderHead/>\n            <this.renderConnectStatus/>\n            <this.renderContent/>\n        </div>\n\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}