{"ast":null,"code":"var _jsxFileName = \"/Users/kenichimatsuo/Desktop/Projects/kms/referall-project/frontend/src/components/dashboard.component.js\";\nimport React, { Component } from 'react'; //import React, {PureComponent} from 'react';\n//import {PieChart} from 'react-minimal-pie-chart';\n\nimport { PieChart, Pie, Sector, Cell, ResponsiveContainer, Legend } from 'recharts';\nimport './style.css';\nimport { Link } from 'react-router-dom';\nimport Chart from 'kaktana-react-lightweight-charts';\nimport './dashboard.css';\nimport TransactionStub from './transaction-stub.component';\nimport axios from 'axios'; //pass in viewed user, connection status, and id of user who is viewing\n//btc\n//doge\n//eth\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Dashboard extends Component {\n  constructor(props) {\n    super(props);\n    this.bcws = new WebSocket(\"wss://stream.binance.us:9443/ws/btcusdt@trade\");\n    this.ethws = new WebSocket(\"wss://stream.binance.us:9443/ws/ethusdt@trade\");\n    this.dogews = new WebSocket(\"wss://stream.binance.us:9443/ws/dogeusdt@trade\");\n    this.updatePosts = this.updatePosts.bind(this);\n    this.renderPosts = this.renderPosts.bind(this);\n    this.bcOnMessage = this.bcOnMessage.bind(this);\n    this.ethOnMessage = this.ethOnMessage.bind(this);\n    this.dogeOnMessage = this.dogeOnMessage.bind(this);\n    this.renderNW = this.renderNW.bind(this);\n    this.handleTypeChange = this.handleTypeChange.bind(this);\n    this.handleCryptoNameChange = this.handleCryptoNameChange.bind(this);\n    this.onChangeQuantity = this.onChangeQuantity.bind(this);\n    this.submit = this.submit.bind(this);\n    this.renderForm = this.renderForm.bind(this);\n    this.renderPieChart = this.renderPieChart.bind(this);\n    this.state = {\n      posts: [],\n      bcLineSeries: [{\n        data: []\n      }],\n      bcData: [],\n      bcPrice: 0,\n      bcKey: 0,\n      ethData: [],\n      ethPrice: 0,\n      ethKey: 0.5,\n      ethLineSeries: [{\n        data: []\n      }],\n      dogeLineSeries: [{\n        data: []\n      }],\n      dogeData: [],\n      dogePrice: 0,\n      dogeKey: 0.2,\n      type: \"BUY\",\n      cryptoName: \"Bitcoin\",\n      quantity: 0\n    };\n  }\n\n  componentDidMount() {\n    const user = localStorage.getItem(\"userID\");\n    alert(user);\n\n    if (user == null || user.length == 0) {\n      alert(\"you are not logged in\");\n      window.location.href = '/login';\n    }\n\n    this.bcws.onmessage = e => this.bcOnMessage(e);\n\n    this.dogews.onmessage = e => this.dogeOnMessage(e);\n\n    this.ethws.onmessage = e => this.ethOnMessage(e);\n\n    this.updatePosts();\n  }\n\n  bcOnMessage(event) {\n    event.preventDefault();\n    var response = JSON.parse(event.data);\n    var utcMiliSec = response.E;\n    var d = new Date(0);\n    d.setUTCMilliseconds(utcMiliSec);\n    var temp = {\n      time: utcMiliSec,\n      value: response.p\n    };\n    var data = this.state.bcData;\n    console.log(data);\n    var lineSeries = this.state.bcLineSeries;\n    console.log(lineSeries);\n    data.push(temp);\n    var pastKey = this.state.bcKey;\n    lineSeries[0].data = data;\n    this.setState({\n      bcData: data,\n      bcPrice: Number(response.p),\n      bcLineSeries: lineSeries,\n      bcKey: pastKey + 1\n    });\n  }\n\n  ethOnMessage(event) {\n    event.preventDefault();\n    var response = JSON.parse(event.data);\n    var utcMiliSec = response.E;\n    var d = new Date(0);\n    d.setUTCMilliseconds(utcMiliSec);\n    var temp = {\n      time: utcMiliSec,\n      value: response.p\n    };\n    var data = this.state.ethData;\n    console.log(data);\n    var lineSeries = this.state.ethLineSeries;\n    console.log(lineSeries);\n    data.push(temp);\n    var pastKey = this.state.ethKey;\n    lineSeries[0].data = data;\n    this.setState({\n      ethData: data,\n      ethPrice: Number(response.p),\n      ethLineSeries: lineSeries,\n      ethKey: pastKey + 1\n    });\n  }\n\n  dogeOnMessage(event) {\n    event.preventDefault();\n    var response = JSON.parse(event.data);\n    var utcMiliSec = response.E;\n    var d = new Date(0);\n    d.setUTCMilliseconds(utcMiliSec);\n    var temp = {\n      time: utcMiliSec,\n      value: response.p\n    };\n    var data = this.state.dogeData;\n    console.log(data);\n    var lineSeries = this.state.dogeLineSeries;\n    console.log(lineSeries);\n    data.push(temp);\n    var pastKey = this.state.dogeKey;\n    lineSeries[0].data = data;\n    this.setState({\n      dogeData: data,\n      dogePrice: Number(response.p),\n      dogeLineSeries: lineSeries,\n      dogeKey: pastKey + 1\n    });\n  }\n\n  updatePosts() {\n    const user = localStorage.getItem(\"userID\");\n    axios.post(\"http://localhost:5000/posts/byuser\", {\n      user: user\n    }).then(function (res) {\n      console.log(res);\n      this.setState({\n        posts: res.data\n      });\n      console.log(this.state.posts);\n    }.bind(this)).catch(err => console.log('Error: ' + err));\n  }\n\n  renderPosts() {\n    if (this.state.bcPrice == 0 || this.state.ethPrice == 0 || this.state.dogePrice == 0) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 14\n      }, this);\n    }\n\n    const posts = this.state.posts;\n\n    if (typeof posts === \"undefined\" || posts.length == 0) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"link\", {\n          rel: \"stylesheet\",\n          type: \"text/css\",\n          href: \"style.css\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"whiteGenText\",\n          children: \"You have no transaction history\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 11\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"link\", {\n        rel: \"stylesheet\",\n        type: \"text/css\",\n        href: \"style.css\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"yellowFi\",\n        children: \"History of Tendies Made:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 7\n      }, this), posts.map(post => /*#__PURE__*/_jsxDEV(TransactionStub, {\n        post: post,\n        price: this.state.bcPrice\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }, this);\n  }\n\n  renderNW() {\n    if (this.state.bcPrice == 0 || this.state.ethPrice == 0 || this.state.dogePrice == 0) {\n      return /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"connecting...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 15\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"link\", {\n        rel: \"stylesheet\",\n        type: \"text/css\",\n        href: \"style.css\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"whiteGenText\",\n        children: [\"Curr Bal($100,000 start): $\", (this.getCashVal() + this.getBCVal() + this.getDOGEVal() + this.getETHVal()).toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"whiteGenText\",\n        children: [\"Cash: $\", this.getCashVal().toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"whiteGenText\",\n        children: [\"Bitcoin: $\", this.getBCVal().toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"whiteGenText\",\n        children: [\"Ethereum: $\", this.getETHVal().toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"whiteGenText\",\n        children: [\"Dogecoin $\", this.getDOGEVal().toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }, this);\n  }\n\n  getCashVal() {\n    let val = 100000;\n    const posts = this.state.posts;\n\n    if (typeof posts === \"undefined\" || posts.length == 0) {\n      return val;\n    }\n\n    for (let i = 0; i < posts.length; i++) {\n      const post = posts[i];\n\n      if (post.action == \"BUY\") {\n        val -= Number(post.quantity);\n      } else {\n        val += Number(post.quantity);\n      }\n    }\n\n    return val;\n  }\n\n  getBCVal() {\n    let val = 0;\n    const posts = this.state.posts;\n\n    if (typeof posts === \"undefined\" || posts.length == 0) {\n      return val;\n    }\n\n    let bitcoins = 0;\n\n    for (let i = 0; i < posts.length; i++) {\n      const post = posts[i];\n\n      if (post.cryptoName == \"Bitcoin\") {\n        if (post.action == \"BUY\") {\n          bitcoins += Number(post.quantity) / Number(post.price);\n        } else {\n          bitcoins -= Number(post.quantity) / Number(post.price);\n        }\n      }\n    }\n\n    val = bitcoins * this.state.bcPrice;\n    return val;\n  }\n\n  getDOGEVal() {\n    let val = 0;\n    const posts = this.state.posts;\n\n    if (typeof posts === \"undefined\" || posts.length == 0) {\n      return val;\n    }\n\n    let dogecoins = 0;\n\n    for (let i = 0; i < posts.length; i++) {\n      const post = posts[i];\n\n      if (post.cryptoName == \"Dogecoin\") {\n        if (post.action == \"BUY\") {\n          dogecoins += Number(post.quantity) / Number(post.price);\n        } else {\n          dogecoins -= Number(post.quantity) / Number(post.price);\n        }\n      }\n    }\n\n    val = dogecoins * this.state.dogePrice;\n    return val;\n  }\n\n  getETHVal() {\n    let val = 0;\n    const posts = this.state.posts;\n\n    if (typeof posts === \"undefined\" || posts.length == 0) {\n      return val;\n    }\n\n    let eth = 0;\n\n    for (let i = 0; i < posts.length; i++) {\n      const post = posts[i];\n\n      if (post.cryptoName == \"Ethereum\") {\n        if (post.action == \"BUY\") {\n          eth += Number(post.quantity) / Number(post.price);\n        } else {\n          eth -= Number(post.quantity) / Number(post.price);\n        }\n      }\n    }\n\n    val = eth * this.state.ethPrice;\n    return val;\n  } //make more getters with more cryptos\n\n\n  handleTypeChange(e) {\n    this.setState({\n      type: e.target.value\n    });\n  }\n\n  handleCryptoNameChange(e) {\n    this.setState({\n      cryptoName: e.target.value\n    });\n  }\n\n  onChangeQuantity(e) {\n    this.setState({\n      quantity: e.target.value\n    });\n  }\n\n  submit() {\n    const quantity = this.state.quantity;\n    let price = 0;\n    const cash = this.getCashVal();\n    const bc = this.getBCVal();\n    const eth = this.getETHVal();\n    const doge = this.getDOGEVal();\n    const name = this.state.cryptoName;\n\n    if (this.state.type == \"BUY\" && quantity > cash) {\n      alert(\"Insufficient Funds\");\n      return;\n    }\n\n    if (this.state.type == \"SELL\") {\n      if (name == \"Bitcoin\" && quantity > bc) {\n        alert(\"Insufficient Funds\");\n        return;\n      }\n\n      if (name == \"Ethereum\" && quantity > eth) {\n        alert(\"Insufficient Funds\");\n        return;\n      }\n\n      if (name == \"Dogecoin\" && quantity > doge) {\n        alert(\"Insufficient Funds\");\n        return;\n      }\n    }\n\n    if (name == \"Bitcoin\") {\n      price = this.state.bcPrice;\n\n      if (price == 0) {\n        alert(\"Still connecting\");\n        return;\n      }\n    } else if (name == \"Ethereum\") {\n      price = this.state.ethPrice;\n\n      if (price == 0) {\n        alert(\"Still connecting\");\n        return;\n      }\n    } else {\n      price = this.state.dogePrice;\n\n      if (price == 0) {\n        alert(\"Still connecting\");\n        return;\n      }\n    }\n\n    const postData = {\n      user: localStorage.getItem(\"userID\"),\n      name: name,\n      action: this.state.type,\n      quantity: quantity,\n      price: price\n    };\n    axios.post(\"http://localhost:5000/posts/add\", postData).then(function (res) {\n      console.log(res);\n      alert(res.data);\n      this.updatePosts();\n    }.bind(this)).catch(err => console.log('Error: ' + err));\n  }\n\n  renderForm() {\n    if (this.state.bcPrice != 0 && this.state.ethPrice != 0 && this.state.dogePrice != 0) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"link\", {\n          rel: \"stylesheet\",\n          type: \"text/css\",\n          href: \"style.css\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"genText\",\n          children: \"Make a transaction\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"transtype\",\n          value: this.state.type,\n          onChange: this.handleTypeChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"BUY\",\n            children: \"BUY\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"SELL\",\n            children: \"SELL\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"whiteGenText\",\n          children: [\"$ Worth Of:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            id: \"quantity\",\n            required: true,\n            className: \"form-control\",\n            value: this.state.quantity,\n            onChange: this.onChangeQuantity\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"selectedCrypto\",\n          value: this.state.cryptoName,\n          onChange: this.handleCryptoNameChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Bitcoin\",\n            children: \"Bitcoin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Ethereum\",\n            children: \"Ethereum\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Dogecoin\",\n            children: \"Dogecoin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.submit,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 14\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 13\n    }, this);\n  }\n\n  renderPieChart() {\n    if (this.state.bcPrice == 0 || this.state.ethPrice == 0 || this.state.dogePrice == 0) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 15\n      }, this);\n    } //Relevant amounts of money held in each catergory\n\n\n    const eth = this.getETHVal();\n    const btc = this.getBCVal();\n    const doge = this.getDOGEVal();\n    const cash = this.getCashVal();\n    const total = cash + btc + doge + eth;\n    const data = [{\n      name: \"Ethereum\",\n      value: eth\n    }, {\n      name: \"Bitcoin\",\n      value: btc\n    }, {\n      name: \"Doge\",\n      value: doge\n    }, {\n      name: \"Cash\",\n      value: cash\n    }];\n    const COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042'];\n    const set = [\"ETH\", \"BTC\", \"DOGE\", \"$\"];\n    const innerRadius = 60;\n    const outerRadius = 80;\n    const Cx = 190;\n    const Cy = 100; //TODO: display pie chart using the above values\n    //place pie chart between div values below\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(PieChart, {\n        width: 350,\n        height: 300,\n        onMouseEnter: this.onPieEnter,\n        children: [/*#__PURE__*/_jsxDEV(Legend, {\n          verticalAlign: \"top\",\n          height: 36\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Pie, {\n          data: data,\n          cx: Cx,\n          cy: Cy,\n          innerRadius: innerRadius,\n          outerRadius: outerRadius,\n          fill: \"#8884d8\",\n          paddingAngle: 5,\n          dataKey: \"value\",\n          children: data.map((entry, index) => /*#__PURE__*/_jsxDEV(Cell, {\n            fill: COLORS[index % COLORS.length]\n          }, `cell-${index}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 425,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 12\n    }, this);\n  }\n\n  render() {\n    console.log(\"render\");\n    return /*#__PURE__*/_jsxDEV(\"body\", {\n      className: \"big\",\n      children: [/*#__PURE__*/_jsxDEV(\"link\", {\n        rel: \"stylesheet\",\n        type: \"text/css\",\n        href: \"style.css\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"postDisplay\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"Title\",\n          children: \"Crypto Trading Simulator\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 441,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"StatRectangle\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"genText\",\n            children: \"Transaction History\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 444,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"userName\",\n            children: localStorage.getItem(\"username\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 445,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(this.renderNW, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 446,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(this.renderPieChart, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 448,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(this.renderForm, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 449,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 443,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"charts\",\n          style: {\n            width: \"700px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"Currency\",\n            children: \"Bitcoin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 454,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Chart, {\n            darkTheme: true,\n            lineSeries: this.state.bcLineSeries,\n            height: 320,\n            autoWidth: true\n          }, this.state.bcKey, false, {\n            fileName: _jsxFileName,\n            lineNumber: 455,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"Currency\",\n            children: \"Ethereum\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 456,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Chart, {\n            darkTheme: true,\n            lineSeries: this.state.ethLineSeries,\n            height: 320,\n            autoWidth: true\n          }, this.state.ethKey, false, {\n            fileName: _jsxFileName,\n            lineNumber: 457,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"Currency\",\n            children: \"Dogecoin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 458,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Chart, {\n            darkTheme: true,\n            lineSeries: this.state.dogeLineSeries,\n            height: 320,\n            autoWidth: true\n          }, this.state.dogeKey, false, {\n            fileName: _jsxFileName,\n            lineNumber: 459,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 453,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"renderForm\",\n          children: /*#__PURE__*/_jsxDEV(this.renderPosts, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 463,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 462,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 437,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Dashboard;","map":{"version":3,"sources":["/Users/kenichimatsuo/Desktop/Projects/kms/referall-project/frontend/src/components/dashboard.component.js"],"names":["React","Component","PieChart","Pie","Sector","Cell","ResponsiveContainer","Legend","Link","Chart","TransactionStub","axios","Dashboard","constructor","props","bcws","WebSocket","ethws","dogews","updatePosts","bind","renderPosts","bcOnMessage","ethOnMessage","dogeOnMessage","renderNW","handleTypeChange","handleCryptoNameChange","onChangeQuantity","submit","renderForm","renderPieChart","state","posts","bcLineSeries","data","bcData","bcPrice","bcKey","ethData","ethPrice","ethKey","ethLineSeries","dogeLineSeries","dogeData","dogePrice","dogeKey","type","cryptoName","quantity","componentDidMount","user","localStorage","getItem","alert","length","window","location","href","onmessage","e","event","preventDefault","response","JSON","parse","utcMiliSec","E","d","Date","setUTCMilliseconds","temp","time","value","p","console","log","lineSeries","push","pastKey","setState","Number","post","then","res","catch","err","map","getCashVal","getBCVal","getDOGEVal","getETHVal","toFixed","val","i","action","bitcoins","price","dogecoins","eth","target","cash","bc","doge","name","postData","btc","total","COLORS","set","innerRadius","outerRadius","Cx","Cy","onPieEnter","entry","index","render","width"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;AACA;;AACA,SAAQC,QAAR,EAAkBC,GAAlB,EAAuBC,MAAvB,EAA+BC,IAA/B,EAAqCC,mBAArC,EAA0DC,MAA1D,QAAuE,UAAvE;AACA,OAAO,aAAP;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,OAAOC,KAAP,MAAkB,kCAAlB;AACA,OAAO,iBAAP;AACA,OAAOC,eAAP,MAA4B,8BAA5B;AAEA,OAAOC,KAAP,MAAkB,OAAlB,C,CACA;AACA;AACA;AACA;;;;AAEA,MAAMC,SAAN,SAAwBX,SAAxB,CAAkC;AAIhCY,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AADgB,SAHlBC,IAGkB,GAHX,IAAIC,SAAJ,CAAe,+CAAf,CAGW;AAAA,SAFlBC,KAEkB,GAFV,IAAID,SAAJ,CAAe,+CAAf,CAEU;AAAA,SADlBE,MACkB,GADT,IAAIF,SAAJ,CAAe,gDAAf,CACS;AAGhB,SAAKG,WAAL,GAAkB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAlB;AACA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBD,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKE,WAAL,GAAmB,KAAKA,WAAL,CAAiBF,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKG,YAAL,GAAoB,KAAKA,YAAL,CAAkBH,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKI,aAAL,GAAqB,KAAKA,aAAL,CAAmBJ,IAAnB,CAAwB,IAAxB,CAArB;AACA,SAAKK,QAAL,GAAgB,KAAKA,QAAL,CAAcL,IAAd,CAAmB,IAAnB,CAAhB;AACA,SAAKM,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBN,IAAtB,CAA2B,IAA3B,CAAxB;AACA,SAAKO,sBAAL,GAA8B,KAAKA,sBAAL,CAA4BP,IAA5B,CAAiC,IAAjC,CAA9B;AACA,SAAKQ,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBR,IAAtB,CAA2B,IAA3B,CAAxB;AACA,SAAKS,MAAL,GAAc,KAAKA,MAAL,CAAYT,IAAZ,CAAiB,IAAjB,CAAd;AACA,SAAKU,UAAL,GAAkB,KAAKA,UAAL,CAAgBV,IAAhB,CAAqB,IAArB,CAAlB;AACA,SAAKW,cAAL,GAAsB,KAAKA,cAAL,CAAoBX,IAApB,CAAyB,IAAzB,CAAtB;AACA,SAAKY,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAG,EADG;AAEXC,MAAAA,YAAY,EAAG,CAAC;AACZC,QAAAA,IAAI,EAAE;AADM,OAAD,CAFJ;AAOXC,MAAAA,MAAM,EAAE,EAPG;AAQXC,MAAAA,OAAO,EAAE,CARE;AASXC,MAAAA,KAAK,EAAE,CATI;AAWXC,MAAAA,OAAO,EAAE,EAXE;AAYXC,MAAAA,QAAQ,EAAE,CAZC;AAaXC,MAAAA,MAAM,EAAE,GAbG;AAcXC,MAAAA,aAAa,EAAG,CAAC;AACfP,QAAAA,IAAI,EAAE;AADS,OAAD,CAdL;AAoBXQ,MAAAA,cAAc,EAAG,CAAC;AAChBR,QAAAA,IAAI,EAAE;AADU,OAAD,CApBN;AAyBXS,MAAAA,QAAQ,EAAE,EAzBC;AA0BXC,MAAAA,SAAS,EAAE,CA1BA;AA2BXC,MAAAA,OAAO,EAAE,GA3BE;AA4BXC,MAAAA,IAAI,EAAE,KA5BK;AA6BXC,MAAAA,UAAU,EAAE,SA7BD;AA8BXC,MAAAA,QAAQ,EAAE;AA9BC,KAAb;AAmCD;;AAEDC,EAAAA,iBAAiB,GAAE;AACjB,UAAMC,IAAI,GAAGC,YAAY,CAACC,OAAb,CAAqB,QAArB,CAAb;AACAC,IAAAA,KAAK,CAACH,IAAD,CAAL;;AACA,QAAIA,IAAI,IAAI,IAAR,IAAeA,IAAI,CAACI,MAAL,IAAc,CAAjC,EAAoC;AAChCD,MAAAA,KAAK,CAAC,uBAAD,CAAL;AACAE,MAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,QAAvB;AACH;;AAAA,SAAK3C,IAAL,CAAU4C,SAAV,GAAuBC,CAAD,IAAM,KAAKtC,WAAL,CAAiBsC,CAAjB,CAA5B;;AACD,SAAK1C,MAAL,CAAYyC,SAAZ,GAAyBC,CAAD,IAAM,KAAKpC,aAAL,CAAmBoC,CAAnB,CAA9B;;AACA,SAAK3C,KAAL,CAAW0C,SAAX,GAAwBC,CAAD,IAAM,KAAKrC,YAAL,CAAkBqC,CAAlB,CAA7B;;AACA,SAAKzC,WAAL;AACH;;AAEDG,EAAAA,WAAW,CAACuC,KAAD,EAAO;AAChBA,IAAAA,KAAK,CAACC,cAAN;AACE,QAAIC,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWJ,KAAK,CAAC1B,IAAjB,CAAf;AACA,QAAI+B,UAAU,GAAGH,QAAQ,CAACI,CAA1B;AACA,QAAIC,CAAC,GAAG,IAAIC,IAAJ,CAAS,CAAT,CAAR;AACAD,IAAAA,CAAC,CAACE,kBAAF,CAAqBJ,UAArB;AACA,QAAIK,IAAI,GAAG;AAACC,MAAAA,IAAI,EAAEN,UAAP;AAAmBO,MAAAA,KAAK,EAAEV,QAAQ,CAACW;AAAnC,KAAX;AACA,QAAIvC,IAAI,GAAG,KAAKH,KAAL,CAAWI,MAAtB;AACAuC,IAAAA,OAAO,CAACC,GAAR,CAAYzC,IAAZ;AACA,QAAI0C,UAAU,GAAG,KAAK7C,KAAL,CAAWE,YAA5B;AACAyC,IAAAA,OAAO,CAACC,GAAR,CAAYC,UAAZ;AACA1C,IAAAA,IAAI,CAAC2C,IAAL,CAAUP,IAAV;AACA,QAAIQ,OAAO,GAAG,KAAK/C,KAAL,CAAWM,KAAzB;AACAuC,IAAAA,UAAU,CAAC,CAAD,CAAV,CAAc1C,IAAd,GAAqBA,IAArB;AACA,SAAK6C,QAAL,CAAc;AACV5C,MAAAA,MAAM,EAAED,IADE;AAEVE,MAAAA,OAAO,EAAE4C,MAAM,CAAClB,QAAQ,CAACW,CAAV,CAFL;AAGVxC,MAAAA,YAAY,EAAE2C,UAHJ;AAIVvC,MAAAA,KAAK,EAAEyC,OAAO,GAAC;AAJL,KAAd;AAOH;;AACDxD,EAAAA,YAAY,CAACsC,KAAD,EAAO;AACjBA,IAAAA,KAAK,CAACC,cAAN;AACA,QAAIC,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWJ,KAAK,CAAC1B,IAAjB,CAAf;AACA,QAAI+B,UAAU,GAAGH,QAAQ,CAACI,CAA1B;AACA,QAAIC,CAAC,GAAG,IAAIC,IAAJ,CAAS,CAAT,CAAR;AACAD,IAAAA,CAAC,CAACE,kBAAF,CAAqBJ,UAArB;AACA,QAAIK,IAAI,GAAG;AAACC,MAAAA,IAAI,EAAEN,UAAP;AAAmBO,MAAAA,KAAK,EAAEV,QAAQ,CAACW;AAAnC,KAAX;AACA,QAAIvC,IAAI,GAAG,KAAKH,KAAL,CAAWO,OAAtB;AACAoC,IAAAA,OAAO,CAACC,GAAR,CAAYzC,IAAZ;AACA,QAAI0C,UAAU,GAAG,KAAK7C,KAAL,CAAWU,aAA5B;AACAiC,IAAAA,OAAO,CAACC,GAAR,CAAYC,UAAZ;AACA1C,IAAAA,IAAI,CAAC2C,IAAL,CAAUP,IAAV;AACA,QAAIQ,OAAO,GAAG,KAAK/C,KAAL,CAAWS,MAAzB;AACAoC,IAAAA,UAAU,CAAC,CAAD,CAAV,CAAc1C,IAAd,GAAqBA,IAArB;AACA,SAAK6C,QAAL,CAAc;AACVzC,MAAAA,OAAO,EAAEJ,IADC;AAEVK,MAAAA,QAAQ,EAAEyC,MAAM,CAAClB,QAAQ,CAACW,CAAV,CAFN;AAGVhC,MAAAA,aAAa,EAAEmC,UAHL;AAIVpC,MAAAA,MAAM,EAAEsC,OAAO,GAAC;AAJN,KAAd;AAOD;;AACDvD,EAAAA,aAAa,CAACqC,KAAD,EAAO;AAClBA,IAAAA,KAAK,CAACC,cAAN;AACA,QAAIC,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWJ,KAAK,CAAC1B,IAAjB,CAAf;AACA,QAAI+B,UAAU,GAAGH,QAAQ,CAACI,CAA1B;AACA,QAAIC,CAAC,GAAG,IAAIC,IAAJ,CAAS,CAAT,CAAR;AACAD,IAAAA,CAAC,CAACE,kBAAF,CAAqBJ,UAArB;AACA,QAAIK,IAAI,GAAG;AAACC,MAAAA,IAAI,EAAEN,UAAP;AAAmBO,MAAAA,KAAK,EAAEV,QAAQ,CAACW;AAAnC,KAAX;AACA,QAAIvC,IAAI,GAAG,KAAKH,KAAL,CAAWY,QAAtB;AACA+B,IAAAA,OAAO,CAACC,GAAR,CAAYzC,IAAZ;AACA,QAAI0C,UAAU,GAAG,KAAK7C,KAAL,CAAWW,cAA5B;AACAgC,IAAAA,OAAO,CAACC,GAAR,CAAYC,UAAZ;AACA1C,IAAAA,IAAI,CAAC2C,IAAL,CAAUP,IAAV;AACA,QAAIQ,OAAO,GAAG,KAAK/C,KAAL,CAAWc,OAAzB;AACA+B,IAAAA,UAAU,CAAC,CAAD,CAAV,CAAc1C,IAAd,GAAqBA,IAArB;AACA,SAAK6C,QAAL,CAAc;AACVpC,MAAAA,QAAQ,EAAET,IADA;AAEVU,MAAAA,SAAS,EAAEoC,MAAM,CAAClB,QAAQ,CAACW,CAAV,CAFP;AAGV/B,MAAAA,cAAc,EAAEkC,UAHN;AAIV/B,MAAAA,OAAO,EAAEiC,OAAO,GAAC;AAJP,KAAd;AAOD;;AACD5D,EAAAA,WAAW,GAAE;AACT,UAAMgC,IAAI,GAAGC,YAAY,CAACC,OAAb,CAAqB,QAArB,CAAb;AAGD1C,IAAAA,KAAK,CAACuE,IAAN,CAAW,oCAAX,EAAiD;AAAC/B,MAAAA,IAAI,EAAEA;AAAP,KAAjD,EACKgC,IADL,CACU,UAASC,GAAT,EAAa;AACjBT,MAAAA,OAAO,CAACC,GAAR,CAAYQ,GAAZ;AACE,WAAKJ,QAAL,CAAc;AACV/C,QAAAA,KAAK,EAAEmD,GAAG,CAACjD;AADD,OAAd;AAGAwC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAK5C,KAAL,CAAWC,KAAvB;AAEH,KAPK,CAOJb,IAPI,CAOC,IAPD,CADV,EASKiE,KATL,CASWC,GAAG,IAAIX,OAAO,CAACC,GAAR,CAAY,YAAYU,GAAxB,CATlB;AAUF;;AAECjE,EAAAA,WAAW,GAAE;AACX,QAAG,KAAKW,KAAL,CAAWK,OAAX,IAAoB,CAApB,IAA0B,KAAKL,KAAL,CAAWQ,QAAX,IAAuB,CAAvB,IAA2B,KAAKR,KAAL,CAAWa,SAAX,IAAuB,CAA/E,EAAkF;AAChF,0BAAO;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;;AACC,UAAMZ,KAAK,GAAG,KAAKD,KAAL,CAAWC,KAAzB;;AACF,QAAG,OAAOA,KAAP,KAAiB,WAAjB,IAA8BA,KAAK,CAACsB,MAAN,IAAc,CAA/C,EAAiD;AAC7C,0BACE;AAAA,gCACA;AAAM,UAAA,GAAG,EAAG,YAAZ;AAAyB,UAAA,IAAI,EAAC,UAA9B;AAAyC,UAAA,IAAI,EAAC;AAA9C;AAAA;AAAA;AAAA;AAAA,gBADA,eAEA;AAAG,UAAA,SAAS,EAAG,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAKH;;AAAA,wBAAO;AAAA,8BACN;AAAM,QAAA,GAAG,EAAG,YAAZ;AAAyB,QAAA,IAAI,EAAC,UAA9B;AAAyC,QAAA,IAAI,EAAC;AAA9C;AAAA;AAAA;AAAA;AAAA,cADM,eAEN;AAAI,QAAA,SAAS,EAAG,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFM,EAMHtB,KAAK,CAACsD,GAAN,CAAWL,IAAD,iBAEP,QAAC,eAAD;AAAiB,QAAA,IAAI,EAAIA,IAAzB;AAA+B,QAAA,KAAK,EAAE,KAAKlD,KAAL,CAAWK;AAAjD;AAAA;AAAA;AAAA;AAAA,cAFH,CANG;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AAWF;;AACDZ,EAAAA,QAAQ,GAAE;AACR,QAAG,KAAKO,KAAL,CAAWK,OAAX,IAAoB,CAApB,IAA0B,KAAKL,KAAL,CAAWQ,QAAX,IAAuB,CAAvB,IAA2B,KAAKR,KAAL,CAAWa,SAAX,IAAuB,CAA/E,EAAkF;AAChF,0BAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAR;AACD;;AACD,wBACE;AAAA,8BACE;AAAM,QAAA,GAAG,EAAG,YAAZ;AAAyB,QAAA,IAAI,EAAC,UAA9B;AAAyC,QAAA,IAAI,EAAC;AAA9C;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAI,QAAA,SAAS,EAAG,cAAhB;AAAA,kDAA2D,CAAC,KAAK2C,UAAL,KAAoB,KAAKC,QAAL,EAApB,GAAsC,KAAKC,UAAL,EAAtC,GAAyD,KAAKC,SAAL,EAA1D,EAA4EC,OAA5E,CAAoF,CAApF,CAA3D;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAI,QAAA,SAAS,EAAG,cAAhB;AAAA,8BAAuC,KAAKJ,UAAL,GAAkBI,OAAlB,CAA0B,CAA1B,CAAvC;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAI,QAAA,SAAS,EAAG,cAAhB;AAAA,iCAA0C,KAAKH,QAAL,GAAgBG,OAAhB,CAAwB,CAAxB,CAA1C;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE;AAAI,QAAA,SAAS,EAAG,cAAhB;AAAA,kCAA2C,KAAKD,SAAL,GAAiBC,OAAjB,CAAyB,CAAzB,CAA3C;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,eAME;AAAI,QAAA,SAAS,EAAG,cAAhB;AAAA,iCAA0C,KAAKF,UAAL,GAAkBE,OAAlB,CAA0B,CAA1B,CAA1C;AAAA;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AASD;;AACDJ,EAAAA,UAAU,GAAE;AACV,QAAIK,GAAG,GAAG,MAAV;AACA,UAAM5D,KAAK,GAAG,KAAKD,KAAL,CAAWC,KAAzB;;AACA,QAAG,OAAOA,KAAP,KAAiB,WAAjB,IAA8BA,KAAK,CAACsB,MAAN,IAAc,CAA/C,EAAiD;AAC7C,aAAOsC,GAAP;AACH;;AACD,SAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG7D,KAAK,CAACsB,MAAzB,EAAiCuC,CAAC,EAAlC,EAAqC;AACjC,YAAMZ,IAAI,GAAGjD,KAAK,CAAC6D,CAAD,CAAlB;;AACA,UAAGZ,IAAI,CAACa,MAAL,IAAe,KAAlB,EAAwB;AACpBF,QAAAA,GAAG,IAAIZ,MAAM,CAACC,IAAI,CAACjC,QAAN,CAAb;AACH,OAFD,MAEK;AACD4C,QAAAA,GAAG,IAAIZ,MAAM,CAACC,IAAI,CAACjC,QAAN,CAAb;AACH;AACJ;;AACD,WAAO4C,GAAP;AACD;;AACDJ,EAAAA,QAAQ,GAAE;AACR,QAAII,GAAG,GAAG,CAAV;AACA,UAAM5D,KAAK,GAAG,KAAKD,KAAL,CAAWC,KAAzB;;AACA,QAAG,OAAOA,KAAP,KAAiB,WAAjB,IAA8BA,KAAK,CAACsB,MAAN,IAAc,CAA/C,EAAiD;AAC7C,aAAOsC,GAAP;AACH;;AACD,QAAIG,QAAQ,GAAE,CAAd;;AACA,SAAI,IAAIF,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG7D,KAAK,CAACsB,MAAzB,EAAiCuC,CAAC,EAAlC,EAAqC;AACjC,YAAMZ,IAAI,GAAGjD,KAAK,CAAC6D,CAAD,CAAlB;;AACA,UAAGZ,IAAI,CAAClC,UAAL,IAAmB,SAAtB,EAAgC;AAC9B,YAAGkC,IAAI,CAACa,MAAL,IAAe,KAAlB,EAAwB;AACtBC,UAAAA,QAAQ,IAAIf,MAAM,CAACC,IAAI,CAACjC,QAAN,CAAN,GAAsBgC,MAAM,CAACC,IAAI,CAACe,KAAN,CAAxC;AACD,SAFD,MAEK;AACHD,UAAAA,QAAQ,IAAIf,MAAM,CAACC,IAAI,CAACjC,QAAN,CAAN,GAAsBgC,MAAM,CAACC,IAAI,CAACe,KAAN,CAAxC;AACD;AACF;AAEJ;;AAAAJ,IAAAA,GAAG,GAAGG,QAAQ,GAAG,KAAKhE,KAAL,CAAWK,OAA5B;AACD,WAAOwD,GAAP;AACD;;AACDH,EAAAA,UAAU,GAAE;AACV,QAAIG,GAAG,GAAG,CAAV;AACA,UAAM5D,KAAK,GAAG,KAAKD,KAAL,CAAWC,KAAzB;;AACA,QAAG,OAAOA,KAAP,KAAiB,WAAjB,IAA8BA,KAAK,CAACsB,MAAN,IAAc,CAA/C,EAAiD;AAC7C,aAAOsC,GAAP;AACH;;AACD,QAAIK,SAAS,GAAE,CAAf;;AACA,SAAI,IAAIJ,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG7D,KAAK,CAACsB,MAAzB,EAAiCuC,CAAC,EAAlC,EAAqC;AACjC,YAAMZ,IAAI,GAAGjD,KAAK,CAAC6D,CAAD,CAAlB;;AACA,UAAGZ,IAAI,CAAClC,UAAL,IAAmB,UAAtB,EAAiC;AAC/B,YAAGkC,IAAI,CAACa,MAAL,IAAe,KAAlB,EAAwB;AACtBG,UAAAA,SAAS,IAAIjB,MAAM,CAACC,IAAI,CAACjC,QAAN,CAAN,GAAsBgC,MAAM,CAACC,IAAI,CAACe,KAAN,CAAzC;AACD,SAFD,MAEK;AACHC,UAAAA,SAAS,IAAIjB,MAAM,CAACC,IAAI,CAACjC,QAAN,CAAN,GAAsBgC,MAAM,CAACC,IAAI,CAACe,KAAN,CAAzC;AACD;AACF;AAEJ;;AAAAJ,IAAAA,GAAG,GAAGK,SAAS,GAAG,KAAKlE,KAAL,CAAWa,SAA7B;AACD,WAAOgD,GAAP;AACD;;AACDF,EAAAA,SAAS,GAAE;AACT,QAAIE,GAAG,GAAG,CAAV;AACA,UAAM5D,KAAK,GAAG,KAAKD,KAAL,CAAWC,KAAzB;;AACA,QAAG,OAAOA,KAAP,KAAiB,WAAjB,IAA8BA,KAAK,CAACsB,MAAN,IAAc,CAA/C,EAAiD;AAC7C,aAAOsC,GAAP;AACH;;AACD,QAAIM,GAAG,GAAE,CAAT;;AACA,SAAI,IAAIL,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG7D,KAAK,CAACsB,MAAzB,EAAiCuC,CAAC,EAAlC,EAAqC;AACjC,YAAMZ,IAAI,GAAGjD,KAAK,CAAC6D,CAAD,CAAlB;;AACA,UAAGZ,IAAI,CAAClC,UAAL,IAAmB,UAAtB,EAAiC;AAC/B,YAAGkC,IAAI,CAACa,MAAL,IAAe,KAAlB,EAAwB;AACtBI,UAAAA,GAAG,IAAIlB,MAAM,CAACC,IAAI,CAACjC,QAAN,CAAN,GAAsBgC,MAAM,CAACC,IAAI,CAACe,KAAN,CAAnC;AACD,SAFD,MAEK;AACHE,UAAAA,GAAG,IAAIlB,MAAM,CAACC,IAAI,CAACjC,QAAN,CAAN,GAAsBgC,MAAM,CAACC,IAAI,CAACe,KAAN,CAAnC;AACD;AACF;AAEJ;;AAAAJ,IAAAA,GAAG,GAAGM,GAAG,GAAG,KAAKnE,KAAL,CAAWQ,QAAvB;AACD,WAAOqD,GAAP;AACD,GAtQ+B,CAuQhC;;;AACAnE,EAAAA,gBAAgB,CAACkC,CAAD,EAAG;AACjB,SAAKoB,QAAL,CAAc;AACZjC,MAAAA,IAAI,EAAEa,CAAC,CAACwC,MAAF,CAAS3B;AADH,KAAd;AAGD;;AACD9C,EAAAA,sBAAsB,CAACiC,CAAD,EAAG;AACvB,SAAKoB,QAAL,CAAc;AACZhC,MAAAA,UAAU,EAAEY,CAAC,CAACwC,MAAF,CAAS3B;AADT,KAAd;AAGD;;AACD7C,EAAAA,gBAAgB,CAACgC,CAAD,EAAG;AACjB,SAAKoB,QAAL,CAAc;AACZ/B,MAAAA,QAAQ,EAAEW,CAAC,CAACwC,MAAF,CAAS3B;AADP,KAAd;AAGD;;AACD5C,EAAAA,MAAM,GAAE;AACN,UAAMoB,QAAQ,GAAG,KAAKjB,KAAL,CAAWiB,QAA5B;AACA,QAAIgD,KAAK,GAAG,CAAZ;AACA,UAAMI,IAAI,GAAG,KAAKb,UAAL,EAAb;AACA,UAAMc,EAAE,GAAG,KAAKb,QAAL,EAAX;AACA,UAAMU,GAAG,GAAG,KAAKR,SAAL,EAAZ;AACA,UAAMY,IAAI,GAAG,KAAKb,UAAL,EAAb;AACA,UAAMc,IAAI,GAAG,KAAKxE,KAAL,CAAWgB,UAAxB;;AAEA,QAAG,KAAKhB,KAAL,CAAWe,IAAX,IAAmB,KAAnB,IAA4BE,QAAQ,GAAEoD,IAAzC,EAA8C;AAC5C/C,MAAAA,KAAK,CAAC,oBAAD,CAAL;AACA;AACD;;AAAA,QAAG,KAAKtB,KAAL,CAAWe,IAAX,IAAmB,MAAtB,EAA6B;AAC5B,UAAGyD,IAAI,IAAI,SAAR,IAAmBvD,QAAQ,GAAEqD,EAAhC,EAAmC;AACjChD,QAAAA,KAAK,CAAC,oBAAD,CAAL;AACA;AACD;;AAAA,UAAGkD,IAAI,IAAI,UAAR,IAAoBvD,QAAQ,GAAEkD,GAAjC,EAAqC;AACpC7C,QAAAA,KAAK,CAAC,oBAAD,CAAL;AACA;AACD;;AAAA,UAAGkD,IAAI,IAAI,UAAR,IAAoBvD,QAAQ,GAAEsD,IAAjC,EAAsC;AACrCjD,QAAAA,KAAK,CAAC,oBAAD,CAAL;AACA;AACD;AACF;;AACD,QAAGkD,IAAI,IAAI,SAAX,EAAqB;AACnBP,MAAAA,KAAK,GAAG,KAAKjE,KAAL,CAAWK,OAAnB;;AACA,UAAG4D,KAAK,IAAE,CAAV,EAAY;AACV3C,QAAAA,KAAK,CAAC,kBAAD,CAAL;AACA;AACD;AACF,KAND,MAMM,IAAGkD,IAAI,IAAI,UAAX,EAAsB;AAC1BP,MAAAA,KAAK,GAAG,KAAKjE,KAAL,CAAWQ,QAAnB;;AACA,UAAGyD,KAAK,IAAE,CAAV,EAAY;AACV3C,QAAAA,KAAK,CAAC,kBAAD,CAAL;AACA;AACD;AACF,KANK,MAMD;AACH2C,MAAAA,KAAK,GAAG,KAAKjE,KAAL,CAAWa,SAAnB;;AACA,UAAGoD,KAAK,IAAE,CAAV,EAAY;AACV3C,QAAAA,KAAK,CAAC,kBAAD,CAAL;AACA;AACD;AACF;;AACD,UAAMmD,QAAQ,GAAG;AACftD,MAAAA,IAAI,EAAEC,YAAY,CAACC,OAAb,CAAqB,QAArB,CADS;AAEfmD,MAAAA,IAAI,EAAEA,IAFS;AAGfT,MAAAA,MAAM,EAAE,KAAK/D,KAAL,CAAWe,IAHJ;AAIfE,MAAAA,QAAQ,EAAEA,QAJK;AAKfgD,MAAAA,KAAK,EAAEA;AALQ,KAAjB;AAOAtF,IAAAA,KAAK,CAACuE,IAAN,CAAW,iCAAX,EAA6CuB,QAA7C,EACItB,IADJ,CACS,UAASC,GAAT,EAAa;AACjBT,MAAAA,OAAO,CAACC,GAAR,CAAYQ,GAAZ;AACE9B,MAAAA,KAAK,CAAC8B,GAAG,CAACjD,IAAL,CAAL;AACA,WAAKhB,WAAL;AAEH,KALK,CAKJC,IALI,CAKC,IALD,CADT,EAOIiE,KAPJ,CAOUC,GAAG,IAAIX,OAAO,CAACC,GAAR,CAAY,YAAYU,GAAxB,CAPjB;AAUD;;AACDxD,EAAAA,UAAU,GAAE;AACV,QAAG,KAAKE,KAAL,CAAWK,OAAX,IAAoB,CAApB,IAA0B,KAAKL,KAAL,CAAWQ,QAAX,IAAuB,CAAvB,IAA2B,KAAKR,KAAL,CAAWa,SAAX,IAAuB,CAA/E,EAAkF;AAChF,0BAAO;AAAA,gCACG;AAAM,UAAA,GAAG,EAAG,YAAZ;AAAyB,UAAA,IAAI,EAAC,UAA9B;AAAyC,UAAA,IAAI,EAAC;AAA9C;AAAA;AAAA;AAAA;AAAA,gBADH,eAEG;AAAI,UAAA,SAAS,EAAE,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFH,eAGG;AAAQ,UAAA,EAAE,EAAG,WAAb;AAAyB,UAAA,KAAK,EAAE,KAAKb,KAAL,CAAWe,IAA3C;AAAiD,UAAA,QAAQ,EAAE,KAAKrB,gBAAhE;AAAA,kCACQ;AAAQ,YAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADR,eAEQ;AAAQ,YAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFR;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHH,eAOK;AAAG,UAAA,SAAS,EAAG,cAAf;AAAA,iDACA;AAAO,YAAA,IAAI,EAAC,QAAZ;AAAqB,YAAA,EAAE,EAAC,UAAxB;AACM,YAAA,QAAQ,MADd;AAEM,YAAA,SAAS,EAAG,cAFlB;AAGM,YAAA,KAAK,EAAI,KAAKM,KAAL,CAAWiB,QAH1B;AAIM,YAAA,QAAQ,EAAI,KAAKrB;AAJvB;AAAA;AAAA;AAAA;AAAA,kBADA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPL,eAeG;AAAQ,UAAA,EAAE,EAAG,gBAAb;AAA8B,UAAA,KAAK,EAAE,KAAKI,KAAL,CAAWgB,UAAhD;AAA4D,UAAA,QAAQ,EAAE,KAAKrB,sBAA3E;AAAA,kCACQ;AAAQ,YAAA,KAAK,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADR,eAEQ;AAAQ,YAAA,KAAK,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFR,eAGQ;AAAQ,YAAA,KAAK,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHR;AAAA;AAAA;AAAA;AAAA;AAAA,gBAfH,eAqBG;AAAQ,UAAA,OAAO,EAAI,KAAKE,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBArBH;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AAuBD;;AAAA,wBAAO;AAAA;AAAA;AAAA;AAAA,YAAP;AACF;;AACDE,EAAAA,cAAc,GAAE;AACd,QAAG,KAAKC,KAAL,CAAWK,OAAX,IAAoB,CAApB,IAA0B,KAAKL,KAAL,CAAWQ,QAAX,IAAuB,CAAvB,IAA2B,KAAKR,KAAL,CAAWa,SAAX,IAAuB,CAA/E,EAAkF;AAChF,0BAAQ;AAAA;AAAA;AAAA;AAAA,cAAR;AACD,KAHa,CAId;;;AACA,UAAMsD,GAAG,GAAG,KAAKR,SAAL,EAAZ;AACA,UAAMe,GAAG,GAAG,KAAKjB,QAAL,EAAZ;AACA,UAAMc,IAAI,GAAG,KAAKb,UAAL,EAAb;AACA,UAAMW,IAAI,GAAG,KAAKb,UAAL,EAAb;AAEA,UAAMmB,KAAK,GAAGN,IAAI,GAACK,GAAL,GAASH,IAAT,GAAcJ,GAA5B;AACA,UAAMhE,IAAI,GAAG,CACX;AAACqE,MAAAA,IAAI,EAAE,UAAP;AAAmB/B,MAAAA,KAAK,EAAE0B;AAA1B,KADW,EAEX;AAACK,MAAAA,IAAI,EAAE,SAAP;AAAkB/B,MAAAA,KAAK,EAACiC;AAAxB,KAFW,EAGX;AAACF,MAAAA,IAAI,EAAE,MAAP;AAAe/B,MAAAA,KAAK,EAAE8B;AAAtB,KAHW,EAIX;AAACC,MAAAA,IAAI,EAAC,MAAN;AAAc/B,MAAAA,KAAK,EAAE4B;AAArB,KAJW,CAAb;AAMA,UAAMO,MAAM,GAAG,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,CAAf;AACA,UAAMC,GAAG,GAAG,CAAC,KAAD,EAAQ,KAAR,EAAe,MAAf,EAAuB,GAAvB,CAAZ;AACA,UAAMC,WAAW,GAAG,EAApB;AACA,UAAMC,WAAW,GAAG,EAApB;AACA,UAAMC,EAAE,GAAG,GAAX;AACA,UAAMC,EAAE,GAAG,GAAX,CAtBc,CAuBd;AAGA;;AACA,wBAAO;AAAA,6BACL,QAAC,QAAD;AAAU,QAAA,KAAK,EAAG,GAAlB;AAAuB,QAAA,MAAM,EAAG,GAAhC;AAAqC,QAAA,YAAY,EAAE,KAAKC,UAAxD;AAAA,gCACA,QAAC,MAAD;AAAQ,UAAA,aAAa,EAAC,KAAtB;AAA4B,UAAA,MAAM,EAAE;AAApC;AAAA;AAAA;AAAA;AAAA,gBADA,eAEE,QAAC,GAAD;AACA,UAAA,IAAI,EAAI/E,IADR;AAEA,UAAA,EAAE,EAAI6E,EAFN;AAGA,UAAA,EAAE,EAAIC,EAHN;AAIA,UAAA,WAAW,EAAIH,WAJf;AAKA,UAAA,WAAW,EAAIC,WALf;AAMA,UAAA,IAAI,EAAC,SANL;AAOA,UAAA,YAAY,EAAE,CAPd;AAQA,UAAA,OAAO,EAAG,OARV;AAAA,oBAUG5E,IAAI,CAACoD,GAAL,CAAS,CAAC4B,KAAD,EAAQC,KAAR,kBACR,QAAC,IAAD;AAA4B,YAAA,IAAI,EAAER,MAAM,CAACQ,KAAK,GAAGR,MAAM,CAACrD,MAAhB;AAAxC,aAAY,QAAO6D,KAAM,EAAzB;AAAA;AAAA;AAAA;AAAA,kBADD;AAVH;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADK;AAAA;AAAA;AAAA;AAAA,YAAP;AAqBD;;AACDC,EAAAA,MAAM,GAAG;AACP1C,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AAEA,wBACE;AAAM,MAAA,SAAS,EAAG,KAAlB;AAAA,8BACE;AAAM,QAAA,GAAG,EAAG,YAAZ;AAAyB,QAAA,IAAI,EAAC,UAA9B;AAAyC,QAAA,IAAI,EAAC;AAA9C;AAAA;AAAA;AAAA;AAAA,cADF,eAGE;AAAK,QAAA,EAAE,EAAG,aAAV;AAAA,gCACE;AAAI,UAAA,SAAS,EAAG,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAGE;AAAK,UAAA,SAAS,EAAG,eAAjB;AAAA,kCACE;AAAI,YAAA,SAAS,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAI,YAAA,SAAS,EAAG,UAAhB;AAAA,sBAA4BxB,YAAY,CAACC,OAAb,CAAqB,UAArB;AAA5B;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE,aAAM,QAAN;AAAA;AAAA;AAAA;AAAA,kBAHF,eAKE,aAAM,cAAN;AAAA;AAAA;AAAA;AAAA,kBALF,eAME,aAAM,UAAN;AAAA;AAAA;AAAA;AAAA,kBANF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,eAaI;AAAK,UAAA,EAAE,EAAG,QAAV;AAAmB,UAAA,KAAK,EAAI;AAACiE,YAAAA,KAAK,EAAG;AAAT,WAA5B;AAAA,kCACE;AAAI,YAAA,SAAS,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,KAAD;AAAO,YAAA,SAAS,MAAhB;AAAiB,YAAA,UAAU,EAAE,KAAKtF,KAAL,CAAWE,YAAxC;AAA8E,YAAA,MAAM,EAAI,GAAxF;AAA6F,YAAA,SAAS;AAAtG,aAA6D,KAAKF,KAAL,CAAWM,KAAxE;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAI,YAAA,SAAS,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE,QAAC,KAAD;AAAO,YAAA,SAAS,MAAhB;AAAiB,YAAA,UAAU,EAAE,KAAKN,KAAL,CAAWU,aAAxC;AAAgF,YAAA,MAAM,EAAI,GAA1F;AAA+F,YAAA,SAAS;AAAxG,aAA8D,KAAKV,KAAL,CAAWS,MAAzE;AAAA;AAAA;AAAA;AAAA,kBAJF,eAKE;AAAI,YAAA,SAAS,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALF,eAME,QAAC,KAAD;AAAO,YAAA,SAAS,MAAhB;AAAiB,YAAA,UAAU,EAAE,KAAKT,KAAL,CAAWW,cAAxC;AAAkF,YAAA,MAAM,EAAI,GAA5F;AAAiG,YAAA,SAAS;AAA1G,aAA+D,KAAKX,KAAL,CAAWc,OAA1E;AAAA;AAAA;AAAA;AAAA,kBANF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAbJ,eAsBI;AAAK,UAAA,SAAS,EAAG,YAAjB;AAAA,iCACE,aAAM,WAAN;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAtBJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AA0CD;;AA7c+B;;AAgdlC,eAAelC,SAAf","sourcesContent":["import React, { Component } from 'react';\n//import React, {PureComponent} from 'react';\n//import {PieChart} from 'react-minimal-pie-chart';\nimport {PieChart, Pie, Sector, Cell, ResponsiveContainer, Legend} from 'recharts';\nimport './style.css'\nimport {Link} from 'react-router-dom';\nimport Chart from 'kaktana-react-lightweight-charts'\nimport './dashboard.css';\nimport TransactionStub from './transaction-stub.component'\n\nimport axios from 'axios'\n//pass in viewed user, connection status, and id of user who is viewing\n//btc\n//doge\n//eth\n\nclass Dashboard extends Component {\n  bcws = new WebSocket (\"wss://stream.binance.us:9443/ws/btcusdt@trade\");\n  ethws = new WebSocket (\"wss://stream.binance.us:9443/ws/ethusdt@trade\");\n  dogews = new WebSocket (\"wss://stream.binance.us:9443/ws/dogeusdt@trade\");\n  constructor(props){\n    super(props);\n    \n    this.updatePosts= this.updatePosts.bind(this);\n    this.renderPosts = this.renderPosts.bind(this);\n    this.bcOnMessage = this.bcOnMessage.bind(this);\n    this.ethOnMessage = this.ethOnMessage.bind(this);\n    this.dogeOnMessage = this.dogeOnMessage.bind(this);\n    this.renderNW = this.renderNW.bind(this);\n    this.handleTypeChange = this.handleTypeChange.bind(this);\n    this.handleCryptoNameChange = this.handleCryptoNameChange.bind(this);\n    this.onChangeQuantity = this.onChangeQuantity.bind(this);\n    this.submit = this.submit.bind(this);\n    this.renderForm = this.renderForm.bind(this);\n    this.renderPieChart = this.renderPieChart.bind(this);\n    this.state = {\n      posts : [],\n      bcLineSeries : [{\n          data: [\n              \n          ]\n      }],\n      bcData: [],\n      bcPrice: 0,\n      bcKey: 0,\n      \n      ethData: [],\n      ethPrice: 0,\n      ethKey: 0.5,\n      ethLineSeries : [{\n        data: [\n            \n        ]\n      }],\n      \n      dogeLineSeries : [{\n        data: [\n            \n        ]\n      }],\n      dogeData: [],\n      dogePrice: 0,\n      dogeKey: 0.2,\n      type: \"BUY\",\n      cryptoName: \"Bitcoin\",\n      quantity: 0\n      \n\n    };\n    \n  }\n  \n  componentDidMount(){\n    const user = localStorage.getItem(\"userID\");\n    alert(user);\n    if (user == null ||user.length ==0) {\n        alert(\"you are not logged in\");\n        window.location.href = '/login';\n    }this.bcws.onmessage = (e)=> this.bcOnMessage(e);\n    this.dogews.onmessage = (e)=> this.dogeOnMessage(e);\n    this.ethws.onmessage = (e)=> this.ethOnMessage(e);\n    this.updatePosts();\n}\n  \nbcOnMessage(event){\n  event.preventDefault()\n    var response = JSON.parse(event.data)\n    var utcMiliSec = response.E\n    var d = new Date(0)\n    d.setUTCMilliseconds(utcMiliSec)\n    var temp = {time: utcMiliSec, value: response.p}\n    var data = this.state.bcData;\n    console.log(data);\n    var lineSeries = this.state.bcLineSeries;\n    console.log(lineSeries);\n    data.push(temp);\n    var pastKey = this.state.bcKey;\n    lineSeries[0].data = data\n    this.setState({\n        bcData: data,\n        bcPrice: Number(response.p),\n        bcLineSeries: lineSeries,\n        bcKey: pastKey+1\n    })\n    \n}\nethOnMessage(event){\n  event.preventDefault();\n  var response = JSON.parse(event.data)\n  var utcMiliSec = response.E\n  var d = new Date(0)\n  d.setUTCMilliseconds(utcMiliSec)\n  var temp = {time: utcMiliSec, value: response.p}\n  var data = this.state.ethData;\n  console.log(data);\n  var lineSeries = this.state.ethLineSeries;\n  console.log(lineSeries);\n  data.push(temp);\n  var pastKey = this.state.ethKey;\n  lineSeries[0].data = data\n  this.setState({\n      ethData: data,\n      ethPrice: Number(response.p),\n      ethLineSeries: lineSeries,\n      ethKey: pastKey+1\n  })\n  \n}\ndogeOnMessage(event){\n  event.preventDefault();\n  var response = JSON.parse(event.data)\n  var utcMiliSec = response.E\n  var d = new Date(0)\n  d.setUTCMilliseconds(utcMiliSec)\n  var temp = {time: utcMiliSec, value: response.p}\n  var data = this.state.dogeData;\n  console.log(data);\n  var lineSeries = this.state.dogeLineSeries;\n  console.log(lineSeries);\n  data.push(temp);\n  var pastKey = this.state.dogeKey;\n  lineSeries[0].data = data\n  this.setState({\n      dogeData: data,\n      dogePrice: Number(response.p),\n      dogeLineSeries: lineSeries,\n      dogeKey: pastKey+1\n  })\n  \n}\nupdatePosts(){\n    const user = localStorage.getItem(\"userID\");\n  \n  \n   axios.post(\"http://localhost:5000/posts/byuser\", {user: user})\n       .then(function(res){\n         console.log(res);\n           this.setState({\n               posts: res.data\n           });\n           console.log(this.state.posts);\n           \n       }.bind(this)) \n       .catch(err => console.log('Error: ' + err));\n}\n\n  renderPosts(){\n    if(this.state.bcPrice==0 || (this.state.ethPrice == 0|| this.state.dogePrice ==0)){\n      return(<div></div>);\n    }\n      const posts = this.state.posts;\n    if(typeof posts === \"undefined\"||posts.length==0){\n        return(\n          <div>\n          <link rel = \"stylesheet\" type=\"text/css\" href=\"style.css\"/>\n          <p className = \"whiteGenText\">You have no transaction history</p></div>);\n          \n    }return(<div>\n      <link rel = \"stylesheet\" type=\"text/css\" href=\"style.css\"/>\n      <h1 className = \"yellowFi\">\n        \n        History of Tendies Made:\n      </h1>\n        {posts.map((post) =>\n            \n            <TransactionStub post = {post} price={this.state.bcPrice}/>\n        )}\n    </div>)\n  }\n  renderNW(){\n    if(this.state.bcPrice==0 || (this.state.ethPrice == 0|| this.state.dogePrice ==0)){\n      return (<h3>connecting...</h3>)\n    }\n    return(\n      <div>\n        <link rel = \"stylesheet\" type=\"text/css\" href=\"style.css\"/>\n        <h4 className = \"whiteGenText\">Curr Bal($100,000 start): ${(this.getCashVal() + this.getBCVal() + this.getDOGEVal()+ this.getETHVal()).toFixed(2)}</h4>\n        <h5 className = \"whiteGenText\">Cash: ${this.getCashVal().toFixed(2)}</h5>\n        <h5 className = \"whiteGenText\">Bitcoin: ${this.getBCVal().toFixed(2)}</h5>\n        <h5 className = \"whiteGenText\">Ethereum: ${this.getETHVal().toFixed(2)}</h5>\n        <h5 className = \"whiteGenText\">Dogecoin ${this.getDOGEVal().toFixed(2)}</h5>\n      </div>)\n  }\n  getCashVal(){\n    let val = 100000;\n    const posts = this.state.posts;\n    if(typeof posts === \"undefined\"||posts.length==0){\n        return val;\n    }\n    for(let i = 0; i < posts.length; i++){\n        const post = posts[i];\n        if(post.action == \"BUY\"){\n            val -= Number(post.quantity);\n        }else{\n            val += Number(post.quantity);\n        }\n    }\n    return val;\n  }\n  getBCVal(){\n    let val = 0;\n    const posts = this.state.posts;\n    if(typeof posts === \"undefined\"||posts.length==0){\n        return val;\n    }\n    let bitcoins= 0;\n    for(let i = 0; i < posts.length; i++){\n        const post = posts[i];\n        if(post.cryptoName == \"Bitcoin\"){\n          if(post.action == \"BUY\"){\n            bitcoins += Number(post.quantity)/Number(post.price);\n          }else{\n            bitcoins -= Number(post.quantity)/Number(post.price);\n          }\n        }\n        \n    }val = bitcoins * this.state.bcPrice;\n    return val;\n  }\n  getDOGEVal(){\n    let val = 0;\n    const posts = this.state.posts;\n    if(typeof posts === \"undefined\"||posts.length==0){\n        return val;\n    }\n    let dogecoins= 0;\n    for(let i = 0; i < posts.length; i++){\n        const post = posts[i];\n        if(post.cryptoName == \"Dogecoin\"){\n          if(post.action == \"BUY\"){\n            dogecoins += Number(post.quantity)/Number(post.price);\n          }else{\n            dogecoins -= Number(post.quantity)/Number(post.price);\n          }\n        }\n        \n    }val = dogecoins * this.state.dogePrice;\n    return val;\n  }\n  getETHVal(){\n    let val = 0;\n    const posts = this.state.posts;\n    if(typeof posts === \"undefined\"||posts.length==0){\n        return val;\n    }\n    let eth= 0;\n    for(let i = 0; i < posts.length; i++){\n        const post = posts[i];\n        if(post.cryptoName == \"Ethereum\"){\n          if(post.action == \"BUY\"){\n            eth += Number(post.quantity)/Number(post.price);\n          }else{\n            eth -= Number(post.quantity)/Number(post.price);\n          }\n        }\n        \n    }val = eth * this.state.ethPrice;\n    return val;\n  }\n  //make more getters with more cryptos\n  handleTypeChange(e){\n    this.setState({\n      type: e.target.value\n    })\n  }\n  handleCryptoNameChange(e){\n    this.setState({\n      cryptoName: e.target.value\n    })\n  }\n  onChangeQuantity(e){\n    this.setState({\n      quantity: e.target.value\n    })\n  }\n  submit(){\n    const quantity = this.state.quantity;\n    let price = 0;\n    const cash = this.getCashVal();\n    const bc = this.getBCVal();\n    const eth = this.getETHVal();\n    const doge = this.getDOGEVal();\n    const name = this.state.cryptoName;\n\n    if(this.state.type == \"BUY\" && quantity> cash){\n      alert(\"Insufficient Funds\");\n      return;\n    }if(this.state.type == \"SELL\"){\n      if(name == \"Bitcoin\"&&quantity> bc){\n        alert(\"Insufficient Funds\");\n        return;\n      }if(name == \"Ethereum\"&&quantity> eth){\n        alert(\"Insufficient Funds\");\n        return;\n      }if(name == \"Dogecoin\"&&quantity> doge){\n        alert(\"Insufficient Funds\");\n        return;\n      }\n    }\n    if(name == \"Bitcoin\"){\n      price = this.state.bcPrice;\n      if(price==0){\n        alert(\"Still connecting\");\n        return;\n      }\n    }else if(name == \"Ethereum\"){\n      price = this.state.ethPrice;\n      if(price==0){\n        alert(\"Still connecting\");\n        return;\n      }\n    }else{\n      price = this.state.dogePrice;\n      if(price==0){\n        alert(\"Still connecting\");\n        return;\n      }\n    }\n    const postData = {\n      user: localStorage.getItem(\"userID\"),\n      name: name,\n      action: this.state.type,\n      quantity: quantity,\n      price: price\n    }\n    axios.post(\"http://localhost:5000/posts/add\",postData)\n       .then(function(res){\n         console.log(res);\n           alert(res.data);\n           this.updatePosts();\n           \n       }.bind(this)) \n       .catch(err => console.log('Error: ' + err));\n\n\n  }\n  renderForm(){\n    if(this.state.bcPrice!=0 && (this.state.ethPrice != 0&& this.state.dogePrice !=0)){\n      return(<div>\n                <link rel = \"stylesheet\" type=\"text/css\" href=\"style.css\"/>\n                <h5 className= \"genText\">Make a transaction</h5>\n                <select id = \"transtype\" value={this.state.type} onChange={this.handleTypeChange}>\n                        <option value=\"BUY\">BUY</option>\n                        <option value=\"SELL\">SELL</option>\n                  </select>\n                  <p className = \"whiteGenText\">$ Worth Of: \n                  <input type=\"number\" id=\"quantity\" \n                        required \n                        className = \"form-control\" \n                        value = {this.state.quantity}\n                        onChange = {this.onChangeQuantity}/>\n                \n                </p>\n                <select id = \"selectedCrypto\" value={this.state.cryptoName} onChange={this.handleCryptoNameChange}>\n                        <option value=\"Bitcoin\">Bitcoin</option>\n                        <option value=\"Ethereum\">Ethereum</option>\n                        <option value=\"Dogecoin\">Dogecoin</option>\n                  </select>\n                \n                <button onClick = {this.submit}>Submit</button>\n      </div>);\n    }return(<div></div>);\n  }\n  renderPieChart(){\n    if(this.state.bcPrice==0 || (this.state.ethPrice == 0|| this.state.dogePrice ==0)){\n      return (<div></div>)\n    }\n    //Relevant amounts of money held in each catergory\n    const eth = this.getETHVal();\n    const btc = this.getBCVal();\n    const doge = this.getDOGEVal();\n    const cash = this.getCashVal();\n\n    const total = cash+btc+doge+eth;\n    const data = [\n      {name: \"Ethereum\", value: eth},\n      {name: \"Bitcoin\", value:btc},\n      {name: \"Doge\", value: doge},\n      {name:\"Cash\", value: cash},\n    ];\n    const COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042'];\n    const set = [\"ETH\", \"BTC\", \"DOGE\", \"$\"];\n    const innerRadius = 60;\n    const outerRadius = 80;\n    const Cx = 190;\n    const Cy = 100;\n    //TODO: display pie chart using the above values\n    \n\n    //place pie chart between div values below\n    return(<div>\n      <PieChart width ={350} height ={300} onMouseEnter={this.onPieEnter}>\n      <Legend verticalAlign=\"top\" height={36}/>\n        <Pie\n        data = {data}\n        cx = {Cx}\n        cy = {Cy}\n        innerRadius = {innerRadius}\n        outerRadius = {outerRadius}\n        fill=\"#8884d8\"\n        paddingAngle={5}\n        dataKey = \"value\"\n        >\n          {data.map((entry, index) => (\n            <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n          ))}\n        </Pie>\n      </PieChart>\n      \n      \n    </div>);\n  }\n  render() {\n    console.log(\"render\");\n    \n    return (\n      <body className = \"big\">\n        <link rel = \"stylesheet\" type=\"text/css\" href=\"style.css\"/>\n        \n        <div id = \"postDisplay\">\n          <h1 className = \"Title\">Crypto Trading Simulator</h1>\n          \n          <div className = \"StatRectangle\">\n            <h2 className=\"genText\">Transaction History</h2>\n            <h1 className = \"userName\">{localStorage.getItem(\"username\")}</h1>\n            <this.renderNW/>\n            \n            <this.renderPieChart/>\n            <this.renderForm/>\n            \n          </div>\n          \n            <div id = \"charts\" style = {{width : \"700px\"}}>\n              <h2 className=\"Currency\" >Bitcoin</h2>\n              <Chart darkTheme lineSeries={this.state.bcLineSeries} key = {this.state.bcKey}height = {320} autoWidth/>\n              <h2 className=\"Currency\">Ethereum</h2>\n              <Chart darkTheme lineSeries={this.state.ethLineSeries} key = {this.state.ethKey}height = {320} autoWidth/>\n              <h2 className=\"Currency\">Dogecoin</h2>\n              <Chart darkTheme lineSeries={this.state.dogeLineSeries} key = {this.state.dogeKey}height = {320} autoWidth />\n            </div>\n\n            <div className = \"renderForm\">\n              <this.renderPosts/>\n            </div>\n            \n              \n              \n              \n              \n              \n              \n              \n          \n        </div>\n        \n      </body>\n    );\n  }\n}\n \nexport default Dashboard;"]},"metadata":{},"sourceType":"module"}