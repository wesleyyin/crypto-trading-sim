{"ast":null,"code":"var _jsxFileName = \"/Users/work/Documents/GitHub/referall-project/frontend/src/components/dashboard.component.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { createChart } from 'lightweight-charts';\nimport './dashboard.css';\nimport axios from 'axios'; //pass in viewed user, connection status, and id of user who is viewing\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Dashboard extends Component {\n  constructor(props) {\n    super(props);\n    this.chartRefBC = /*#__PURE__*/React.createRef();\n    this.updatePosts = this.updatePosts.bind(this);\n    this.bcws = new WebSocket(\"wss://stream.binance.us:9443/ws/btcusdt@trade\");\n    this.bcChart = createChart(this.chartRefBC, {\n      width: 690,\n      height: 420\n    });\n    this.bcLineSeries = this.bcChart.addLineSeries();\n    this.bcws.onmessage = this.bcOnMessage;\n    this.state = {\n      posts: [],\n      bcData: [],\n      bcPrice: 0\n    };\n  }\n\n  componentDidMount() {\n    const myChartRef = this.chartRef.current.getContext(\"2d\");\n    const user = localStorage.getItem(\"userID\");\n    alert(user);\n\n    if (user.length == 0) {\n      alert(\"you are not logged in\");\n      window.location.href = '/login';\n    }\n\n    this.updatePosts();\n  }\n\n  bcOnMessage(event) {\n    var response = JSON.parse(event.data);\n    var utcMiliSec = response.E;\n    var temp = {\n      time: utcMiliSec,\n      value: response.p\n    };\n    var data = this.state.bcData;\n    data.push(temp);\n    this.bcLineSeries.setData(data);\n    this.setState({\n      bcData: data,\n      bcPrice: response.p\n    });\n  }\n\n  updatePosts() {\n    const user = localStorage.getItem(\"userID\");\n    axios.post(\"http://localhost:5000/posts/byuser\", {\n      user: user\n    }).then(function (res) {\n      console.log(res);\n      this.setState({\n        posts: res.data.posts\n      });\n      console.log(this.state.posts);\n    }.bind(this)).catch(err => console.log('Error: ' + err));\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"postDisplay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: this.chartRefBC\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Dashboard;","map":{"version":3,"sources":["/Users/work/Documents/GitHub/referall-project/frontend/src/components/dashboard.component.js"],"names":["React","Component","Link","createChart","axios","Dashboard","constructor","props","chartRefBC","createRef","updatePosts","bind","bcws","WebSocket","bcChart","width","height","bcLineSeries","addLineSeries","onmessage","bcOnMessage","state","posts","bcData","bcPrice","componentDidMount","myChartRef","chartRef","current","getContext","user","localStorage","getItem","alert","length","window","location","href","event","response","JSON","parse","data","utcMiliSec","E","temp","time","value","p","push","setData","setState","post","then","res","console","log","catch","err","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {Link} from 'react-router-dom';\nimport { createChart } from 'lightweight-charts';\nimport './dashboard.css';\n\nimport axios from 'axios'\n//pass in viewed user, connection status, and id of user who is viewing\nclass Dashboard extends Component {\n  chartRefBC = React.createRef();\n  constructor(props){\n    super(props);\n    \n    this.updatePosts= this.updatePosts.bind(this);\n\n    this.bcws = new WebSocket (\"wss://stream.binance.us:9443/ws/btcusdt@trade\");\n    this.bcChart = createChart(this.chartRefBC, { width: 690, height: 420 });\n    this.bcLineSeries = this.bcChart.addLineSeries();\n    this.bcws.onmessage = this.bcOnMessage;\n    this.state = {\n      posts : [],\n      bcData: [],\n      bcPrice: 0\n    };\n  }\n  \n  componentDidMount(){\n    const myChartRef = this.chartRef.current.getContext(\"2d\");\n    const user = localStorage.getItem(\"userID\");\n    alert(user);\n    if (user.length ==0) {\n        alert(\"you are not logged in\");\n        window.location.href = '/login';\n    }\n    this.updatePosts();\n}\n  \nbcOnMessage(event){\n    var response = JSON.parse(event.data)\n    var utcMiliSec = response.E\n    var temp = {time: utcMiliSec, value: response.p}\n    var data = this.state.bcData;\n    data.push(temp)\n    this.bcLineSeries.setData(data) \n    this.setState({\n        bcData: data,\n        bcPrice: response.p\n    })\n    \n}\nupdatePosts(){\n    const user = localStorage.getItem(\"userID\");\n  \n  \n   axios.post(\"http://localhost:5000/posts/byuser\", {user: user})\n       .then(function(res){\n         console.log(res);\n           this.setState({\n               posts: res.data.posts\n           });\n           console.log(this.state.posts);\n           \n       }.bind(this)) \n       .catch(err => console.log('Error: ' + err));\n}\n\n  \n  \n  render() {\n    \n    return (\n      <div id = \"postDisplay\">\n          <div ref = {this.chartRefBC} />\n        \n       \n      </div>\n    );\n  }\n}\n \nexport default Dashboard;"]},"metadata":{},"sourceType":"module"}