{"ast":null,"code":"var _jsxFileName = \"/Users/work/Documents/GitHub/referall-project/frontend/src/components/dashboard.component.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Chart from 'kaktana-react-lightweight-charts';\nimport './dashboard.css';\nimport axios from 'axios'; //pass in viewed user, connection status, and id of user who is viewing\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Dashboard extends Component {\n  constructor(props) {\n    super(props);\n    this.bcws = new WebSocket(\"wss://stream.binance.us:9443/ws/btcusdt@trade\");\n    this.updatePosts = this.updatePosts.bind(this);\n    this.bcOnMessage = this.bcOnMessage.bind(this);\n    this.state = {\n      posts: [],\n      bcLineSeries: [{\n        data: [{\n          time: 1618679636808,\n          value: \"60543.10000000\"\n        }, {\n          time: 1618679644972,\n          value: \"60496.10000000\"\n        }, {\n          time: 1618679644985,\n          value: \"60496.10000000\"\n        }, {\n          time: 1618679645153,\n          value: \"60496.10000000\"\n        }]\n      }],\n      bcData: [],\n      bcPrice: 0\n    };\n  }\n\n  componentDidMount() {\n    const user = localStorage.getItem(\"userID\");\n    alert(user);\n\n    if (user.length == 0) {\n      alert(\"you are not logged in\");\n      window.location.href = '/login';\n    }\n\n    this.bcws.onmessage = e => this.bcOnMessage(e);\n\n    this.updatePosts();\n  }\n\n  bcOnMessage(event) {\n    var response = JSON.parse(event.data);\n    var utcMiliSec = response.E;\n    var temp = {\n      time: utcMiliSec,\n      value: response.p\n    };\n    var data = this.state.bcData;\n    console.log(data);\n    var lineSeries = this.state.bcLineSeries;\n    console.log(lineSeries);\n    data.push(temp);\n    lineSeries[0].data = data;\n    this.setState({\n      bcData: data,\n      bcPrice: response.p,\n      bcLineSeries: lineSeries\n    });\n  }\n\n  updatePosts() {\n    const user = localStorage.getItem(\"userID\");\n    axios.post(\"http://localhost:5000/posts/byuser\", {\n      user: user\n    }).then(function (res) {\n      console.log(res);\n      this.setState({\n        posts: res.data.posts\n      });\n      console.log(this.state.posts);\n    }.bind(this)).catch(err => console.log('Error: ' + err));\n  }\n\n  render() {\n    console.log(\"render\");\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"postDisplay\",\n      children: /*#__PURE__*/_jsxDEV(Chart, {\n        lineSeries: this.state.bcLineSeries,\n        autoWidth: true,\n        height: 320\n      }, this.state.bcLineSeries, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Dashboard;","map":{"version":3,"sources":["/Users/work/Documents/GitHub/referall-project/frontend/src/components/dashboard.component.js"],"names":["React","Component","Link","Chart","axios","Dashboard","constructor","props","bcws","WebSocket","updatePosts","bind","bcOnMessage","state","posts","bcLineSeries","data","time","value","bcData","bcPrice","componentDidMount","user","localStorage","getItem","alert","length","window","location","href","onmessage","e","event","response","JSON","parse","utcMiliSec","E","temp","p","console","log","lineSeries","push","setState","post","then","res","catch","err","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {Link} from 'react-router-dom';\nimport Chart from 'kaktana-react-lightweight-charts'\nimport './dashboard.css';\n\nimport axios from 'axios'\n//pass in viewed user, connection status, and id of user who is viewing\nclass Dashboard extends Component {\n  bcws = new WebSocket (\"wss://stream.binance.us:9443/ws/btcusdt@trade\");\n  constructor(props){\n    super(props);\n    \n    this.updatePosts= this.updatePosts.bind(this);\n\n    this.bcOnMessage = this.bcOnMessage.bind(this);\n    this.state = {\n      posts : [],\n      bcLineSeries : [{\n          data: [\n              {time: 1618679636808, value: \"60543.10000000\"},\n              {time: 1618679644972, value: \"60496.10000000\"},\n              {time: 1618679644985, value: \"60496.10000000\"},\n              {time: 1618679645153, value: \"60496.10000000\"}\n          ]\n      }],\n      bcData: [],\n      bcPrice: 0\n\n    };\n    \n  }\n  \n  componentDidMount(){\n    const user = localStorage.getItem(\"userID\");\n    alert(user);\n    if (user.length ==0) {\n        alert(\"you are not logged in\");\n        window.location.href = '/login';\n    }this.bcws.onmessage = (e)=> this.bcOnMessage(e);\n    this.updatePosts();\n}\n  \nbcOnMessage(event){\n    var response = JSON.parse(event.data)\n    var utcMiliSec = response.E\n    var temp = {time: utcMiliSec, value: response.p}\n    var data = this.state.bcData;\n    console.log(data);\n    var lineSeries = this.state.bcLineSeries;\n    console.log(lineSeries);\n    data.push(temp)\n    lineSeries[0].data = data\n    this.setState({\n        bcData: data,\n        bcPrice: response.p,\n        bcLineSeries: lineSeries\n    })\n    \n}\nupdatePosts(){\n    const user = localStorage.getItem(\"userID\");\n  \n  \n   axios.post(\"http://localhost:5000/posts/byuser\", {user: user})\n       .then(function(res){\n         console.log(res);\n           this.setState({\n               posts: res.data.posts\n           });\n           console.log(this.state.posts);\n           \n       }.bind(this)) \n       .catch(err => console.log('Error: ' + err));\n}\n\n  \n  \n  render() {\n    console.log(\"render\");\n    return (\n      <div id = \"postDisplay\">\n          <Chart lineSeries={this.state.bcLineSeries} key = {this.state.bcLineSeries}autoWidth height={320} />\n        \n       \n      </div>\n    );\n  }\n}\n \nexport default Dashboard;"]},"metadata":{},"sourceType":"module"}