{"ast":null,"code":"var _jsxFileName = \"/Users/work/Documents/GitHub/referall-project/frontend/src/components/dashboard.component.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Chart from 'kaktana-react-lightweight-charts';\nimport './dashboard.css';\nimport TransactionStub from './transaction-stub.component';\nimport axios from 'axios'; //pass in viewed user, connection status, and id of user who is viewing\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Dashboard extends Component {\n  constructor(props) {\n    super(props);\n    this.bcws = new WebSocket(\"wss://stream.binance.us:9443/ws/btcusdt@trade\");\n    this.updatePosts = this.updatePosts.bind(this);\n    this.renderPosts = this.renderPosts.bind(this);\n    this.bcOnMessage = this.bcOnMessage.bind(this);\n    this.renderNW = this.render.bind(this);\n    this.state = {\n      posts: [],\n      bcLineSeries: [{\n        data: [{\n          time: 1618679636808,\n          value: \"60543.10000000\"\n        }, {\n          time: 1618679644972,\n          value: \"60496.10000000\"\n        }, {\n          time: 1618679644985,\n          value: \"60496.10000000\"\n        }, {\n          time: 1618679645153,\n          value: \"60496.10000000\"\n        }]\n      }],\n      bcData: [],\n      bcPrice: 0,\n      bcKey: 0\n    };\n  }\n\n  componentDidMount() {\n    const user = localStorage.getItem(\"userID\");\n    alert(user);\n\n    if (user.length == 0) {\n      alert(\"you are not logged in\");\n      window.location.href = '/login';\n    }\n\n    this.bcws.onmessage = e => this.bcOnMessage(e);\n\n    this.updatePosts();\n  }\n\n  bcOnMessage(event) {\n    var response = JSON.parse(event.data);\n    var utcMiliSec = response.E;\n    var d = new Date(0);\n    d.setUTCMilliseconds(utcMiliSec);\n    var temp = {\n      time: utcMiliSec,\n      value: response.p\n    };\n    var data = this.state.bcData;\n    console.log(data);\n    var lineSeries = this.state.bcLineSeries;\n    console.log(lineSeries);\n    data.push(temp);\n    var pastKey = this.state.bcKey;\n    lineSeries[0].data = data;\n    this.setState({\n      bcData: data,\n      bcPrice: Number(response.p),\n      bcLineSeries: lineSeries,\n      bcKey: pastKey + 1\n    });\n  }\n\n  updatePosts() {\n    const user = localStorage.getItem(\"userID\");\n    axios.post(\"http://localhost:5000/posts/byuser\", {\n      user: user\n    }).then(function (res) {\n      console.log(res);\n      this.setState({\n        posts: res.data.posts\n      });\n      console.log(this.state.posts);\n    }.bind(this)).catch(err => console.log('Error: ' + err));\n  }\n\n  renderPosts() {\n    const posts = this.state.posts;\n\n    if (typeof posts === \"undefined\" || posts.length == 0) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"You have no transaction history\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 16\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: posts.map(post => /*#__PURE__*/_jsxDEV(TransactionStub, {\n        post: post,\n        bcPrice: this.state.bcPrice\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this);\n  }\n\n  renderNW() {\n    const val = 100000;\n    return /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [\"Current Net Worth($100,000 starting): \", this.getBCVal() + this.getCashVal()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 12\n    }, this);\n  }\n\n  getCashVal() {\n    let val = 100000;\n    const posts = this.state.posts;\n\n    if (!typeof posts === \"undefined\" || posts.length == 0) {\n      return val;\n    }\n\n    for (let i = 0; i < posts.length; i++) {\n      const post = posts[i];\n\n      if (post.action == \"BUY\") {\n        val -= Number(post.quantity);\n      } else {\n        val += Number(post.quantity);\n      }\n    }\n\n    return val;\n  }\n\n  getBCVal() {} //make more getters with more cryptos\n\n\n  render() {\n    console.log(\"render\");\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"postDisplay\",\n      children: [/*#__PURE__*/_jsxDEV(Chart, {\n        lineSeries: this.state.bcLineSeries,\n        autoWidth: true,\n        height: 320\n      }, this.state.bcKey, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this), this.renderNW, this.renderPosts]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Dashboard;","map":{"version":3,"sources":["/Users/work/Documents/GitHub/referall-project/frontend/src/components/dashboard.component.js"],"names":["React","Component","Link","Chart","TransactionStub","axios","Dashboard","constructor","props","bcws","WebSocket","updatePosts","bind","renderPosts","bcOnMessage","renderNW","render","state","posts","bcLineSeries","data","time","value","bcData","bcPrice","bcKey","componentDidMount","user","localStorage","getItem","alert","length","window","location","href","onmessage","e","event","response","JSON","parse","utcMiliSec","E","d","Date","setUTCMilliseconds","temp","p","console","log","lineSeries","push","pastKey","setState","Number","post","then","res","catch","err","map","val","getBCVal","getCashVal","i","action","quantity"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {Link} from 'react-router-dom';\nimport Chart from 'kaktana-react-lightweight-charts'\nimport './dashboard.css';\nimport TransactionStub from './transaction-stub.component'\n\nimport axios from 'axios'\n//pass in viewed user, connection status, and id of user who is viewing\n\nclass Dashboard extends Component {\n  bcws = new WebSocket (\"wss://stream.binance.us:9443/ws/btcusdt@trade\");\n  constructor(props){\n    super(props);\n    \n    this.updatePosts= this.updatePosts.bind(this);\n    this.renderPosts = this.renderPosts.bind(this);\n    this.bcOnMessage = this.bcOnMessage.bind(this);\n    this.renderNW = this.render.bind(this);\n    this.state = {\n      posts : [],\n      bcLineSeries : [{\n          data: [\n              {time: 1618679636808, value: \"60543.10000000\"},\n              {time: 1618679644972, value: \"60496.10000000\"},\n              {time: 1618679644985, value: \"60496.10000000\"},\n              {time: 1618679645153, value: \"60496.10000000\"}\n          ]\n      }],\n      bcData: [],\n      bcPrice: 0,\n      bcKey: 0\n      \n\n    };\n    \n  }\n  \n  componentDidMount(){\n    const user = localStorage.getItem(\"userID\");\n    alert(user);\n    if (user.length ==0) {\n        alert(\"you are not logged in\");\n        window.location.href = '/login';\n    }this.bcws.onmessage = (e)=> this.bcOnMessage(e);\n    this.updatePosts();\n}\n  \nbcOnMessage(event){\n    var response = JSON.parse(event.data)\n    var utcMiliSec = response.E\n    var d = new Date(0)\n    d.setUTCMilliseconds(utcMiliSec)\n    var temp = {time: utcMiliSec, value: response.p}\n    var data = this.state.bcData;\n    console.log(data);\n    var lineSeries = this.state.bcLineSeries;\n    console.log(lineSeries);\n    data.push(temp);\n    var pastKey = this.state.bcKey;\n    lineSeries[0].data = data\n    this.setState({\n        bcData: data,\n        bcPrice: Number(response.p),\n        bcLineSeries: lineSeries,\n        bcKey: pastKey+1\n    })\n    \n}\nupdatePosts(){\n    const user = localStorage.getItem(\"userID\");\n  \n  \n   axios.post(\"http://localhost:5000/posts/byuser\", {user: user})\n       .then(function(res){\n         console.log(res);\n           this.setState({\n               posts: res.data.posts\n           });\n           console.log(this.state.posts);\n           \n       }.bind(this)) \n       .catch(err => console.log('Error: ' + err));\n}\n\n  renderPosts(){\n      const posts = this.state.posts;\n    if(typeof posts === \"undefined\"||posts.length==0){\n        return(<p>You have no transaction history</p>);\n    }return(<div>\n        {posts.map((post) =>\n            <TransactionStub post = {post} bcPrice={this.state.bcPrice}/>\n        )}\n    </div>)\n  }\n  renderNW(){\n    const val = 100000;\n    return(<h4>Current Net Worth($100,000 starting): {this.getBCVal() + this.getCashVal()}</h4>)\n  }\n  getCashVal(){\n    let val = 100000;\n    const posts = this.state.posts;\n    if(!typeof posts === \"undefined\"||posts.length==0){\n        return val;\n    }\n    for(let i = 0; i < posts.length; i++){\n        const post = posts[i];\n        if(post.action == \"BUY\"){\n            val -= Number(post.quantity);\n        }else{\n            val += Number(post.quantity);\n        }\n    }\n    return val;\n  }\n  getBCVal(){\n\n  }//make more getters with more cryptos\n  render() {\n    console.log(\"render\");\n    return (\n      <div id = \"postDisplay\">\n          <Chart lineSeries={this.state.bcLineSeries} key = {this.state.bcKey}autoWidth height={320} />\n            {this.renderNW}\n            {this.renderPosts}\n            \n       \n      </div>\n    );\n  }\n}\n \nexport default Dashboard;"]},"metadata":{},"sourceType":"module"}