{"ast":null,"code":"var _jsxFileName = \"/Users/work/Documents/GitHub/minimalist_social_media/minesse/src/components/feed.component.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios'; //pass in viewed user, connection status, and id of user who is viewing\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Feed extends Component {\n  constructor(props) {\n    super(props);\n    this.updatePosts = this.updatePosts.bind(this);\n    this.editPost = this.editPost.bind(this);\n    this.deletePost = this.deletePost.bind(this);\n    this.renderPrevious = this.renderPrevious.bind(this);\n    this.renderNext = this.renderNext.bind(this);\n    this.nextPost = this.nextPost.bind(this);\n    this.previousPost = this.previousPost.bind(this);\n    this.renderSelf = this.renderSelf.bind(this); //renders buttons users get if post is their own\n\n    this.state = {\n      posts: []\n    };\n  }\n\n  componentDidMount() {\n    const user = localStorage.getItem(\"username\");\n    alert(user);\n\n    if (user.length == 0) {\n      alert(\"you are not logged in\");\n      window.location.href = '/login';\n    }\n\n    this.updatePosts();\n  }\n\n  nextPost() {\n    if (this.state.posts.length > 0) {\n      const userData = {\n        id: localStorage.getItem(\"userID\")\n      };\n      axios.post(\"http://localhost:5000/users/pop_post\", userData).then(function (res) {\n        alert(res.data);\n        this.updatePosts;\n      }.bind(this)).catch(err => console.log('Error: ' + err));\n    }\n  }\n\n  updatePosts() {\n    const user = localStorage.getItem(\"username\");\n    axios.get(\"http://localhost:5000/users/\" + user).then(function (res) {\n      this.setState({\n        posts: res.data.posts\n      });\n      console.log(this.state.posts);\n    }.bind(this)).catch(err => console.log('Error: ' + err));\n  }\n\n  renderNext() {\n    if (this.state.posts.length > 0) {\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.nextPost,\n        children: \"Next Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 14\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 14\n    }, this);\n  }\n\n  render() {\n    const currPosts = this.state.posts;\n\n    if (!currPosts.length) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Your Feed is Empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 14\n      }, this);\n    }\n\n    const post = currPosts[currPosts.length - 1];\n\n    if (post == null) {\n      this.nextPost();\n    }\n\n    const imageName = post.photoName;\n    const caption = post.caption;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"postDisplay\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: process.env.PUBLIC_URL + '/images_uploads/' + imageName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: caption\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(this.renderNext, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Feed;","map":{"version":3,"sources":["/Users/work/Documents/GitHub/minimalist_social_media/minesse/src/components/feed.component.js"],"names":["React","Component","Link","axios","Feed","constructor","props","updatePosts","bind","editPost","deletePost","renderPrevious","renderNext","nextPost","previousPost","renderSelf","state","posts","componentDidMount","user","localStorage","getItem","alert","length","window","location","href","userData","id","post","then","res","data","catch","err","console","log","get","setState","render","currPosts","imageName","photoName","caption","process","env","PUBLIC_URL"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {Link} from 'react-router-dom';\n\nimport axios from 'axios'\n//pass in viewed user, connection status, and id of user who is viewing\nclass Feed extends Component {\n  constructor(props){\n    super(props);\n    \n    this.updatePosts= this.updatePosts.bind(this);\n    this.editPost = this.editPost.bind(this);\n    this.deletePost = this.deletePost.bind(this);\n    this.renderPrevious = this.renderPrevious.bind(this);\n    this.renderNext = this.renderNext.bind(this);\n\n    this.nextPost = this.nextPost.bind(this);\n    this.previousPost = this.previousPost.bind(this);\n    this.renderSelf = this.renderSelf.bind(this); //renders buttons users get if post is their own\n    this.state = {\n      posts : []\n    };\n  }\n  componentDidMount(){\n    const user = localStorage.getItem(\"username\");\n    alert(user);\n    if (user.length ==0) {\n        alert(\"you are not logged in\");\n        window.location.href = '/login';\n    }\n    this.updatePosts();\n}\n  nextPost(){\n    if(this.state.posts.length > 0){\n      const userData = {id: localStorage.getItem(\"userID\")};\n      axios.post(\"http://localhost:5000/users/pop_post\", userData)\n       .then(function(res){\n           alert(res.data)\n           this.updatePosts;\n       }.bind(this)) \n       .catch(err => console.log('Error: ' + err));\n    }\n    \n\n}\n\n\nupdatePosts(){\n    const user = localStorage.getItem(\"username\");\n  \n  \n   axios.get(\"http://localhost:5000/users/\" + user)\n       .then(function(res){\n           this.setState({\n               posts: res.data.posts\n           });\n           console.log(this.state.posts);\n           \n       }.bind(this)) \n       .catch(err => console.log('Error: ' + err));\n}\n\n  \n  renderNext(){\n    if(this.state.posts.length > 0){\n      return(<button onClick = {this.nextPost}>Next Post</button>);\n    }return (<div></div>)\n  }\n  render() {\n    const currPosts = this.state.posts;\n    if(!currPosts.length){\n      return(<p>Your Feed is Empty</p>);\n    }\n    const post = currPosts[currPosts.length-1];\n    if(post == null){\n      this.nextPost();\n    }\n    const imageName = post.photoName;\n    const caption = post.caption;\n    return (\n      <div id = \"postDisplay\">\n        <img src={process.env.PUBLIC_URL + '/images_uploads/' + imageName} />\n        <p>{caption}</p>\n        <this.renderNext/>\n      </div>\n    );\n  }\n}\n\nexport default Feed;"]},"metadata":{},"sourceType":"module"}