{"ast":null,"code":"var _jsxFileName = \"/Users/work/Documents/GitHub/minimalist_social_media/minesse/src/components/new-post.component.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport UserProfile from './UserProfile';\nimport { Redirect } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class NewPost extends Component {\n  constructor(props) {\n    super(props);\n\n    this.renderRedirect = () => {\n      const user = localStorage.getItem(\"username\");\n      alert(user);\n\n      if (user.length == 0) {\n        alert(\"you are not logged in\");\n        window.location.href = '/login';\n      }\n\n      const username = user;\n      const userData = {\n        username: username\n      };\n      console.log(userData);\n      axios.post(\"http://localhost:5000/users/findname\", userData).then(function (res) {\n        alert(res.data.status);\n\n        if (res.data.status) {\n          this.setState({\n            userID: res.data.id\n          });\n        } else {\n          alert(res.data.msg);\n        }\n      }).catch(err => console.log('Error: ' + err));\n    };\n\n    this.onChangeCaption = this.onChangeCaption.bind(this);\n    this.onChangePhoto = this.onChangePhoto.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n\n    const _user = localStorage.getItem(\"username\");\n\n    alert(_user);\n\n    if (_user.length == 0) {\n      alert(\"you are not logged in\");\n      window.location.href = '/login';\n    }\n\n    const _username = _user;\n    const _userData = {\n      username: _username\n    };\n    console.log(_userData);\n    let id = \"\";\n    axios.post(\"http://localhost:5000/users/findname\", _userData).then(function (res) {\n      alert(res.data.status);\n\n      if (res.data.status) {\n        id = res.data.id;\n        this.state = {\n          userID: id,\n          caption: ''\n        };\n      } else {\n        alert(res.data.msg);\n      }\n    }).catch(err => console.log('Error: ' + err));\n  }\n\n  onChangeCaption(e) {\n    this.setState({\n      caption: e.target.value\n    });\n  }\n\n  onChangePhoto(e) {\n    this.setState({\n      photo: e.target.files[0]\n    });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append('photo', this.state.photo);\n    axios.post('http://localhost:5000/images/add/', formData).then(res => {\n      if (res.data.uploaded) {\n        console.log(\"image uploaded\");\n        const fileName = res.data.fileName;\n        const caption = this.state.caption;\n        const user = this.state.userID;\n        console.log(user);\n        const post = {\n          user: user,\n          caption: caption,\n          fileName: fileName\n        };\n        axios.post(\"http://localhost:5000/posts/add\", post).then(function (res) {\n          alert(res);\n        }).catch(err => console.log('Error: ' + err));\n      } else {\n        alert(\"photo upload failed\");\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: this.onSubmit,\n      encType: \"multipart/form-data\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Image Upload: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \".png, .jpg, .jpeg\",\n          name: \"photo\",\n          onChange: this.onChangePhoto\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Caption: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          required: true,\n          className: \"form-control\",\n          value: this.state.caption,\n          onChange: this.onChangeCaption\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Post!\",\n          className: \"btn btn-primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/work/Documents/GitHub/minimalist_social_media/minesse/src/components/new-post.component.js"],"names":["React","Component","axios","UserProfile","Redirect","NewPost","constructor","props","renderRedirect","user","localStorage","getItem","alert","length","window","location","href","username","userData","console","log","post","then","res","data","status","setState","userID","id","msg","catch","err","onChangeCaption","bind","onChangePhoto","onSubmit","state","caption","e","target","value","photo","files","preventDefault","formData","FormData","append","uploaded","fileName","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport UserProfile from './UserProfile';\nimport { Redirect } from 'react-router-dom'\n\nexport default class NewPost extends Component{\n    constructor(props){\n        super(props)\n        this.onChangeCaption = this.onChangeCaption.bind(this);\n        this.onChangePhoto = this.onChangePhoto.bind(this);\n        \n        this.onSubmit= this.onSubmit.bind(this);\n\n        const user = localStorage.getItem(\"username\")\n        alert(user);\n        if (user.length ==0) {\n            alert(\"you are not logged in\");\n          window.location.href = '/login';\n        }\n        const username = user;\n        const userData = {\n            username  : username,\n        }\n        console.log(userData);\n        let id = \"\";\n        axios.post(\"http://localhost:5000/users/findname\", userData)\n            .then(function(res){\n                alert(res.data.status);\n                if(res.data.status){\n                    id = res.data.id\n                    this.state = {\n                        userID : id,\n                        caption : ''\n                    };\n                }else{\n                    alert(res.data.msg);\n                }\n            })\n            .catch(err => console.log('Error: ' + err));\n        \n        \n\n    }\n    \n    onChangeCaption(e){\n        this.setState({\n            caption: e.target.value\n        });\n    }\n    onChangePhoto(e){\n        this.setState({\n            photo: e.target.files[0]\n        });\n    }\n\n    onSubmit(e){\n        e.preventDefault();\n        \n        const formData = new FormData();\n        formData.append('photo', this.state.photo);\n        \n        axios.post('http://localhost:5000/images/add/', formData)\n            .then(res => {\n                if(res.data.uploaded){\n                    console.log(\"image uploaded\");\n                    const fileName = res.data.fileName;\n                    const caption = this.state.caption;\n                    const user = this.state.userID;\n                    console.log(user);\n                    const post = {\n                        user: user,\n                        caption: caption,\n                        fileName: fileName\n                    }\n                    axios.post(\"http://localhost:5000/posts/add\", post)\n                        .then(function(res){\n                            alert(res);\n                        \n                        })\n                        .catch(err => console.log('Error: ' + err));\n                 }else{\n                     alert(\"photo upload failed\");\n                 }\n                \n             });\n             \n    }\n    renderRedirect = () => {\n        const user = localStorage.getItem(\"username\")\n        alert(user);\n        if (user.length ==0) {\n            alert(\"you are not logged in\");\n          window.location.href = '/login';\n        }\n        const username = user;\n        const userData = {\n            username  : username,\n        }\n        console.log(userData);\n        axios.post(\"http://localhost:5000/users/findname\", userData)\n            .then(function(res){\n                alert(res.data.status);\n                if(res.data.status){\n                    this.setState({\n                        userID : res.data.id\n                    });\n                }else{\n                    alert(res.data.msg);\n                }\n            })\n            .catch(err => console.log('Error: ' + err));\n      }\n    render(){\n        return (\n            \n\n            <form onSubmit={this.onSubmit} encType='multipart/form-data'>\n                \n                <div className = \"form-group\">\n                    <label>Image Upload: </label>\n                    <input \n                        type=\"file\" \n                        accept=\".png, .jpg, .jpeg\"\n                        name=\"photo\"\n                        onChange={this.onChangePhoto}\n                    />   \n                </div>\n\n                <div className = \"form-group\">\n                    <label>Caption: </label>\n                    <input type = \"text\" \n                        required\n                        className = \"form-control\"\n                        value = {this.state.caption}\n                        onChange = {this.onChangeCaption}\n                        />    \n                </div>\n    \n               \n    \n    \n                <div className = \"form-group\">\n                    <input type = \"submit\" value = \"Post!\" className = \"btn btn-primary\"/>\n                </div>\n            </form>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}