{"ast":null,"code":"var _jsxFileName = \"/Users/work/Documents/GitHub/referall-project/frontend/src/components/dashboard.component.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Chart from 'kaktana-react-lightweight-charts';\nimport './dashboard.css';\nimport TransactionStub from './transaction-stub.component';\nimport axios from 'axios'; //pass in viewed user, connection status, and id of user who is viewing\n//btc\n//doge\n//eth\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Dashboard extends Component {\n  constructor(props) {\n    super(props);\n    this.bcws = new WebSocket(\"wss://stream.binance.us:9443/ws/btcusdt@trade\");\n    this.ethws = new WebSocket(\"wss://stream.binance.us:9443/ws/ethusdt@trade\");\n    this.dogews = new WebSocket(\"wss://stream.binance.us:9443/ws/dogeusdt@trade\");\n    this.updatePosts = this.updatePosts.bind(this);\n    this.renderPosts = this.renderPosts.bind(this);\n    this.bcOnMessage = this.bcOnMessage.bind(this);\n    this.ethOnMessage = this.ethOnMessage.bind(this);\n    this.dogeOnMessage = this.dogeOnMessage.bind(this);\n    this.renderNW = this.renderNW.bind(this);\n    this.handleTypeChange = this.handleTypeChange.bind(this);\n    this.handleCryptoNameChange = this.handleCryptoNameChange.bind(this);\n    this.onChangeQuantity = this.onChangeQuantity.bind(this);\n    this.submit = this.submit.bind(this);\n    this.renderForm = this.renderForm.bind(this);\n    this.state = {\n      posts: [],\n      bcLineSeries: [{\n        data: []\n      }],\n      bcData: [],\n      bcPrice: 0,\n      bcKey: 0,\n      ethData: [],\n      ethPrice: 0,\n      ethKey: 0.5,\n      ethLineSeries: [{\n        data: []\n      }],\n      dogeLineSeries: [{\n        data: []\n      }],\n      dogeData: [],\n      dogePrice: 0,\n      dogeKey: 0.2,\n      type: \"BUY\",\n      cryptoName: \"Bitcoin\",\n      quantity: 0\n    };\n  }\n\n  componentDidMount() {\n    const user = localStorage.getItem(\"userID\");\n    alert(user);\n\n    if (user.length == 0) {\n      alert(\"you are not logged in\");\n      window.location.href = '/login';\n    }\n\n    this.bcws.onmessage = e => this.bcOnMessage(e);\n\n    this.dogews.onmessage = e => this.dogeOnMessage(e);\n\n    this.ethws.onmessage = e => this.ethOnMessage(e);\n\n    this.updatePosts();\n  }\n\n  bcOnMessage(event) {\n    var response = JSON.parse(event.data);\n    var utcMiliSec = response.E;\n    var d = new Date(0);\n    d.setUTCMilliseconds(utcMiliSec);\n    var temp = {\n      time: utcMiliSec,\n      value: response.p\n    };\n    var data = this.state.bcData;\n    console.log(data);\n    var lineSeries = this.state.bcLineSeries;\n    console.log(lineSeries);\n    data.push(temp);\n    var pastKey = this.state.bcKey;\n    lineSeries[0].data = data;\n    this.setState({\n      bcData: data,\n      bcPrice: Number(response.p),\n      bcLineSeries: lineSeries,\n      bcKey: pastKey + 1\n    });\n  }\n\n  ethOnMessage(event) {\n    var response = JSON.parse(event.data);\n    var utcMiliSec = response.E;\n    var d = new Date(0);\n    d.setUTCMilliseconds(utcMiliSec);\n    var temp = {\n      time: utcMiliSec,\n      value: response.p\n    };\n    var data = this.state.ethData;\n    console.log(data);\n    var lineSeries = this.state.ethLineSeries;\n    console.log(lineSeries);\n    data.push(temp);\n    var pastKey = this.state.ethKey;\n    lineSeries[0].data = data;\n    this.setState({\n      ethData: data,\n      ethPrice: Number(response.p),\n      ethLineSeries: lineSeries,\n      ethKey: pastKey + 1\n    });\n  }\n\n  dogeOnMessage(event) {\n    var response = JSON.parse(event.data);\n    var utcMiliSec = response.E;\n    var d = new Date(0);\n    d.setUTCMilliseconds(utcMiliSec);\n    var temp = {\n      time: utcMiliSec,\n      value: response.p\n    };\n    var data = this.state.dogeData;\n    console.log(data);\n    var lineSeries = this.state.dogeLineSeries;\n    console.log(lineSeries);\n    data.push(temp);\n    var pastKey = this.state.dogeKey;\n    lineSeries[0].data = data;\n    this.setState({\n      dogeData: data,\n      dogePrice: Number(response.p),\n      dogeLineSeries: lineSeries,\n      dogeKey: pastKey + 1\n    });\n  }\n\n  updatePosts() {\n    const user = localStorage.getItem(\"userID\");\n    axios.post(\"http://localhost:5000/posts/byuser\", {\n      user: user\n    }).then(function (res) {\n      console.log(res);\n      this.setState({\n        posts: res.data\n      });\n      console.log(this.state.posts);\n    }.bind(this)).catch(err => console.log('Error: ' + err));\n  }\n\n  renderPosts() {\n    if (this.state.bcPrice == 0) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 14\n      }, this);\n    }\n\n    const posts = this.state.posts;\n\n    if (typeof posts === \"undefined\" || posts.length == 0) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"You have no transaction history\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 16\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: posts.map(post => /*#__PURE__*/_jsxDEV(TransactionStub, {\n        post: post,\n        price: this.state.bcPrice\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 13\n    }, this);\n  }\n\n  renderNW() {\n    if (this.state.bcPrice == 0) {\n      return /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"connecting...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 15\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Current Balance($100,000 starting): $\", (this.getCashVal() + this.getBCVal()).toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: [\"Cash: $\", this.getCashVal().toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: [\"Bitcoin: $\", this.getBCVal().toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 12\n    }, this);\n  }\n\n  getCashVal() {\n    let val = 100000;\n    const posts = this.state.posts;\n\n    if (typeof posts === \"undefined\" || posts.length == 0) {\n      return val;\n    }\n\n    for (let i = 0; i < posts.length; i++) {\n      const post = posts[i];\n\n      if (post.action == \"BUY\") {\n        val -= Number(post.quantity);\n      } else {\n        val += Number(post.quantity);\n      }\n    }\n\n    return val;\n  }\n\n  getBCVal() {\n    let val = 0;\n    const posts = this.state.posts;\n\n    if (typeof posts === \"undefined\" || posts.length == 0) {\n      return val;\n    }\n\n    let bitcoins = 0;\n\n    for (let i = 0; i < posts.length; i++) {\n      const post = posts[i];\n\n      if (post.cryptoName == \"Bitcoin\") {\n        if (post.action == \"BUY\") {\n          bitcoins += Number(post.quantity) / Number(post.price);\n        } else {\n          bitcoins -= Number(post.quantity) / Number(post.price);\n        }\n      }\n    }\n\n    val = bitcoins * this.state.bcPrice;\n    return val;\n  } //make more getters with more cryptos\n\n\n  handleTypeChange(e) {\n    this.setState({\n      type: e.target.value\n    });\n  }\n\n  handleCryptoNameChange(e) {\n    this.setState({\n      cryptoName: e.target.value\n    });\n  }\n\n  onChangeQuantity(e) {\n    this.setState({\n      quantity: e.target.value\n    });\n  }\n\n  submit() {\n    const quantity = this.state.quantity;\n    let price = 0;\n    const cash = this.getCashVal();\n    const bc = this.getBCVal();\n    const name = this.state.cryptoName;\n\n    if (this.state.type == \"BUY\" && quantity > cash) {\n      alert(\"Insufficient Funds\");\n      return;\n    }\n\n    if (this.state.type == \"SELL\") {\n      if (name == \"Bitcoin\") {\n        price = this.state.bcPrice;\n\n        if (price == 0) {\n          alert(\"Still connecting\");\n          return;\n        }\n\n        if (quantity > bc) {\n          alert(\"Insufficient Funds\");\n          return;\n        }\n      }\n    }\n\n    if (name == \"Bitcoin\") {\n      price = this.state.bcPrice;\n\n      if (price == 0) {\n        alert(\"Still connecting\");\n        return;\n      }\n    }\n\n    const postData = {\n      user: localStorage.getItem(\"userID\"),\n      name: name,\n      action: this.state.type,\n      quantity: quantity,\n      price: price\n    };\n    axios.post(\"http://localhost:5000/posts/add\", postData).then(function (res) {\n      console.log(res);\n      alert(res.data);\n      this.updatePosts();\n    }.bind(this)).catch(err => console.log('Error: ' + err));\n  }\n\n  renderForm() {\n    if (this.state.bcPrice != 0) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Make a transaction\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"transtype\",\n          value: this.state.type,\n          onChange: this.handleTypeChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"BUY\",\n            children: \"BUY\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"SELL\",\n            children: \"SELL\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"$\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            id: \"quantity\",\n            required: true,\n            className: \"form-control\",\n            value: this.state.quantity,\n            onChange: this.onChangeQuantity\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 19\n          }, this), \"worth of:\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"selectedCrypto\",\n          value: this.state.cryptoName,\n          onChange: this.handleCryptoNameChange,\n          children: /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Bitcoin\",\n            children: \"Bitcoin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.submit,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 14\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 13\n    }, this);\n  }\n\n  render() {\n    console.log(\"render\");\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"postDisplay\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: localStorage.getItem(\"username\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Bitcoin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Chart, {\n        lineSeries: this.state.bcLineSeries,\n        autoWidth: true,\n        height: 320\n      }, this.state.bcKey, false, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Chart, {\n        lineSeries: this.state.ethLineSeries,\n        autoWidth: true,\n        height: 320\n      }, this.state.ethKey, false, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Chart, {\n        lineSeries: this.state.dogeLineSeries,\n        autoWidth: true,\n        height: 320\n      }, this.state.dogeKey, false, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(this.renderNW, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(this.renderForm, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Transaction History\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(this.renderPosts, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Dashboard;","map":{"version":3,"sources":["/Users/work/Documents/GitHub/referall-project/frontend/src/components/dashboard.component.js"],"names":["React","Component","Link","Chart","TransactionStub","axios","Dashboard","constructor","props","bcws","WebSocket","ethws","dogews","updatePosts","bind","renderPosts","bcOnMessage","ethOnMessage","dogeOnMessage","renderNW","handleTypeChange","handleCryptoNameChange","onChangeQuantity","submit","renderForm","state","posts","bcLineSeries","data","bcData","bcPrice","bcKey","ethData","ethPrice","ethKey","ethLineSeries","dogeLineSeries","dogeData","dogePrice","dogeKey","type","cryptoName","quantity","componentDidMount","user","localStorage","getItem","alert","length","window","location","href","onmessage","e","event","response","JSON","parse","utcMiliSec","E","d","Date","setUTCMilliseconds","temp","time","value","p","console","log","lineSeries","push","pastKey","setState","Number","post","then","res","catch","err","map","getCashVal","getBCVal","toFixed","val","i","action","bitcoins","price","target","cash","bc","name","postData","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {Link} from 'react-router-dom';\nimport Chart from 'kaktana-react-lightweight-charts'\nimport './dashboard.css';\nimport TransactionStub from './transaction-stub.component'\n\nimport axios from 'axios'\n//pass in viewed user, connection status, and id of user who is viewing\n//btc\n//doge\n//eth\n\nclass Dashboard extends Component {\n  bcws = new WebSocket (\"wss://stream.binance.us:9443/ws/btcusdt@trade\");\n  ethws = new WebSocket (\"wss://stream.binance.us:9443/ws/ethusdt@trade\");\n  dogews = new WebSocket (\"wss://stream.binance.us:9443/ws/dogeusdt@trade\");\n  constructor(props){\n    super(props);\n    \n    this.updatePosts= this.updatePosts.bind(this);\n    this.renderPosts = this.renderPosts.bind(this);\n    this.bcOnMessage = this.bcOnMessage.bind(this);\n    this.ethOnMessage = this.ethOnMessage.bind(this);\n    this.dogeOnMessage = this.dogeOnMessage.bind(this);\n    this.renderNW = this.renderNW.bind(this);\n    this.handleTypeChange = this.handleTypeChange.bind(this);\n    this.handleCryptoNameChange = this.handleCryptoNameChange.bind(this);\n    this.onChangeQuantity = this.onChangeQuantity.bind(this);\n    this.submit = this.submit.bind(this);\n    this.renderForm = this.renderForm.bind(this);\n    this.state = {\n      posts : [],\n      bcLineSeries : [{\n          data: [\n              \n          ]\n      }],\n      bcData: [],\n      bcPrice: 0,\n      bcKey: 0,\n      \n      ethData: [],\n      ethPrice: 0,\n      ethKey: 0.5,\n      ethLineSeries : [{\n        data: [\n            \n        ]\n      }],\n      \n      dogeLineSeries : [{\n        data: [\n            \n        ]\n      }],\n      dogeData: [],\n      dogePrice: 0,\n      dogeKey: 0.2,\n      type: \"BUY\",\n      cryptoName: \"Bitcoin\",\n      quantity: 0\n      \n\n    };\n    \n  }\n  \n  componentDidMount(){\n    const user = localStorage.getItem(\"userID\");\n    alert(user);\n    if (user.length ==0) {\n        alert(\"you are not logged in\");\n        window.location.href = '/login';\n    }this.bcws.onmessage = (e)=> this.bcOnMessage(e);\n    this.dogews.onmessage = (e)=> this.dogeOnMessage(e);\n    this.ethws.onmessage = (e)=> this.ethOnMessage(e);\n    this.updatePosts();\n}\n  \nbcOnMessage(event){\n    var response = JSON.parse(event.data)\n    var utcMiliSec = response.E\n    var d = new Date(0)\n    d.setUTCMilliseconds(utcMiliSec)\n    var temp = {time: utcMiliSec, value: response.p}\n    var data = this.state.bcData;\n    console.log(data);\n    var lineSeries = this.state.bcLineSeries;\n    console.log(lineSeries);\n    data.push(temp);\n    var pastKey = this.state.bcKey;\n    lineSeries[0].data = data\n    this.setState({\n        bcData: data,\n        bcPrice: Number(response.p),\n        bcLineSeries: lineSeries,\n        bcKey: pastKey+1\n    })\n    \n}\nethOnMessage(event){\n  var response = JSON.parse(event.data)\n  var utcMiliSec = response.E\n  var d = new Date(0)\n  d.setUTCMilliseconds(utcMiliSec)\n  var temp = {time: utcMiliSec, value: response.p}\n  var data = this.state.ethData;\n  console.log(data);\n  var lineSeries = this.state.ethLineSeries;\n  console.log(lineSeries);\n  data.push(temp);\n  var pastKey = this.state.ethKey;\n  lineSeries[0].data = data\n  this.setState({\n      ethData: data,\n      ethPrice: Number(response.p),\n      ethLineSeries: lineSeries,\n      ethKey: pastKey+1\n  })\n  \n}\ndogeOnMessage(event){\n  var response = JSON.parse(event.data)\n  var utcMiliSec = response.E\n  var d = new Date(0)\n  d.setUTCMilliseconds(utcMiliSec)\n  var temp = {time: utcMiliSec, value: response.p}\n  var data = this.state.dogeData;\n  console.log(data);\n  var lineSeries = this.state.dogeLineSeries;\n  console.log(lineSeries);\n  data.push(temp);\n  var pastKey = this.state.dogeKey;\n  lineSeries[0].data = data\n  this.setState({\n      dogeData: data,\n      dogePrice: Number(response.p),\n      dogeLineSeries: lineSeries,\n      dogeKey: pastKey+1\n  })\n  \n}\nupdatePosts(){\n    const user = localStorage.getItem(\"userID\");\n  \n  \n   axios.post(\"http://localhost:5000/posts/byuser\", {user: user})\n       .then(function(res){\n         console.log(res);\n           this.setState({\n               posts: res.data\n           });\n           console.log(this.state.posts);\n           \n       }.bind(this)) \n       .catch(err => console.log('Error: ' + err));\n}\n\n  renderPosts(){\n    if(this.state.bcPrice==0){\n      return(<div></div>);\n    }\n      const posts = this.state.posts;\n    if(typeof posts === \"undefined\"||posts.length==0){\n        return(<p>You have no transaction history</p>);\n    }return(<div>\n        {posts.map((post) =>\n            <TransactionStub post = {post} price={this.state.bcPrice}/>\n        )}\n    </div>)\n  }\n  renderNW(){\n    if(this.state.bcPrice==0){\n      return (<h3>connecting...</h3>)\n    }\n    return(<div>\n      <h4>Current Balance($100,000 starting): ${(this.getCashVal() + this.getBCVal()).toFixed(2)}</h4>\n      <h5>Cash: ${this.getCashVal().toFixed(2)}</h5>\n      <h5>Bitcoin: ${this.getBCVal().toFixed(2)}</h5>\n      </div>)\n  }\n  getCashVal(){\n    let val = 100000;\n    const posts = this.state.posts;\n    if(typeof posts === \"undefined\"||posts.length==0){\n        return val;\n    }\n    for(let i = 0; i < posts.length; i++){\n        const post = posts[i];\n        if(post.action == \"BUY\"){\n            val -= Number(post.quantity);\n        }else{\n            val += Number(post.quantity);\n        }\n    }\n    return val;\n  }\n  getBCVal(){\n    let val = 0;\n    const posts = this.state.posts;\n    if(typeof posts === \"undefined\"||posts.length==0){\n        return val;\n    }\n    let bitcoins= 0;\n    for(let i = 0; i < posts.length; i++){\n        const post = posts[i];\n        if(post.cryptoName == \"Bitcoin\"){\n          if(post.action == \"BUY\"){\n            bitcoins += Number(post.quantity)/Number(post.price);\n          }else{\n            bitcoins -= Number(post.quantity)/Number(post.price);\n          }\n        }\n        \n    }val = bitcoins * this.state.bcPrice;\n    return val;\n  }//make more getters with more cryptos\n  handleTypeChange(e){\n    this.setState({\n      type: e.target.value\n    })\n  }\n  handleCryptoNameChange(e){\n    this.setState({\n      cryptoName: e.target.value\n    })\n  }\n  onChangeQuantity(e){\n    this.setState({\n      quantity: e.target.value\n    })\n  }\n  submit(){\n    const quantity = this.state.quantity;\n    let price = 0;\n    const cash = this.getCashVal();\n    const bc = this.getBCVal();\n    const name = this.state.cryptoName;\n\n    if(this.state.type == \"BUY\" && quantity> cash){\n      alert(\"Insufficient Funds\");\n      return;\n    }if(this.state.type == \"SELL\"){\n      if(name == \"Bitcoin\"){\n        price = this.state.bcPrice;\n        if(price==0){\n          alert(\"Still connecting\");\n          return;\n        }\n        if(quantity > bc){\n          alert(\"Insufficient Funds\");\n        return;\n        }\n      }\n    }\n    if(name == \"Bitcoin\"){\n      price = this.state.bcPrice;\n      if(price==0){\n        alert(\"Still connecting\");\n        return;\n      }\n    }\n    const postData = {\n      user: localStorage.getItem(\"userID\"),\n      name: name,\n      action: this.state.type,\n      quantity: quantity,\n      price: price\n    }\n    axios.post(\"http://localhost:5000/posts/add\",postData)\n       .then(function(res){\n         console.log(res);\n           alert(res.data);\n           this.updatePosts();\n           \n       }.bind(this)) \n       .catch(err => console.log('Error: ' + err));\n\n\n  }\n  renderForm(){\n    if(this.state.bcPrice !=0){\n      return(<div>\n                \n                <h5>Make a transaction</h5>\n                <select id = \"transtype\" value={this.state.type} onChange={this.handleTypeChange}>\n                        <option value=\"BUY\">BUY</option>\n                        <option value=\"SELL\">SELL</option>\n                  </select>\n                  <p>$\n                  <input type=\"number\" id=\"quantity\" \n                        required \n                        className = \"form-control\" \n                        value = {this.state.quantity}\n                        onChange = {this.onChangeQuantity}/>\n                \n                worth of:</p>\n                <select id = \"selectedCrypto\" value={this.state.cryptoName} onChange={this.handleCryptoNameChange}>\n                        <option value=\"Bitcoin\">Bitcoin</option>\n                  </select>\n                \n                <button onClick = {this.submit}>Submit</button>\n      </div>);\n    }return(<div></div>);\n  }\n  render() {\n    console.log(\"render\");\n    \n    return (\n      <div id = \"postDisplay\">\n        <h1>{localStorage.getItem(\"username\")}</h1>\n          <h2>Bitcoin</h2>\n          <Chart lineSeries={this.state.bcLineSeries} key = {this.state.bcKey}autoWidth height={320} />\n          <Chart lineSeries={this.state.ethLineSeries} key = {this.state.ethKey}autoWidth height={320} />\n          <Chart lineSeries={this.state.dogeLineSeries} key = {this.state.dogeKey}autoWidth height={320} />\n            <this.renderNW/>\n            <this.renderForm/>\n            <h2>Transaction History</h2>\n            <this.renderPosts/>\n            \n       \n      </div>\n    );\n  }\n}\n \nexport default Dashboard;"]},"metadata":{},"sourceType":"module"}