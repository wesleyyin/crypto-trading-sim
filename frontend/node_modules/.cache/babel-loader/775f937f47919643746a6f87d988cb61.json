{"ast":null,"code":"var _jsxFileName = \"/Users/work/Documents/GitHub/referall-project/frontend/src/components/dashboard.component.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Chart from 'kaktana-react-lightweight-charts';\nimport './dashboard.css';\nimport TransactionStub from './transaction-stub.component';\nimport axios from 'axios'; //pass in viewed user, connection status, and id of user who is viewing\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Dashboard extends Component {\n  constructor(props) {\n    super(props);\n    this.bcws = new WebSocket(\"wss://stream.binance.us:9443/ws/btcusdt@trade\");\n    this.updatePosts = this.updatePosts.bind(this);\n    this.renderPosts = this.renderPosts.bind(this);\n    this.bcOnMessage = this.bcOnMessage.bind(this);\n    this.renderNW = this.render.bind(this);\n    this.handleTypeChange = this.handleTypeChange.bind(this);\n    this.handleCryptoNameChange = this.handleCryptoNameChange.bind(this);\n    this.onChangeQuantity = this.onChangeQuantity.bind(this);\n    this.submit = this.submit.bind(this);\n    this.state = {\n      posts: [],\n      bcLineSeries: [{\n        data: []\n      }],\n      bcData: [],\n      bcPrice: 0,\n      bcKey: 0,\n      type: \"BUY\",\n      cryptoName: \"Bitcoin\",\n      quantity: 0\n    };\n  }\n\n  componentDidMount() {\n    const user = localStorage.getItem(\"userID\");\n    alert(user);\n\n    if (user.length == 0) {\n      alert(\"you are not logged in\");\n      window.location.href = '/login';\n    }\n\n    this.bcws.onmessage = e => this.bcOnMessage(e);\n\n    this.updatePosts();\n  }\n\n  bcOnMessage(event) {\n    var response = JSON.parse(event.data);\n    var utcMiliSec = response.E;\n    var d = new Date(0);\n    d.setUTCMilliseconds(utcMiliSec);\n    var temp = {\n      time: utcMiliSec,\n      value: response.p\n    };\n    var data = this.state.bcData;\n    console.log(data);\n    var lineSeries = this.state.bcLineSeries;\n    console.log(lineSeries);\n    data.push(temp);\n    var pastKey = this.state.bcKey;\n    lineSeries[0].data = data;\n    this.setState({\n      bcData: data,\n      bcPrice: Number(response.p),\n      bcLineSeries: lineSeries,\n      bcKey: pastKey + 1\n    });\n  }\n\n  updatePosts() {\n    const user = localStorage.getItem(\"userID\");\n    axios.post(\"http://localhost:5000/posts/byuser\", {\n      user: user\n    }).then(function (res) {\n      console.log(res);\n      this.setState({\n        posts: res.data.posts\n      });\n      console.log(this.state.posts);\n    }.bind(this)).catch(err => console.log('Error: ' + err));\n  }\n\n  renderPosts() {\n    const posts = this.state.posts;\n\n    if (typeof posts === \"undefined\" || posts.length == 0) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"You have no transaction history\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 16\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: posts.map(post => /*#__PURE__*/_jsxDEV(TransactionStub, {\n        post: post,\n        bcPrice: this.state.bcPrice\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this);\n  }\n\n  renderNW() {\n    return /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Current Net Worth($100,000 starting):\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 12\n    }, this);\n  }\n\n  getCashVal() {\n    let val = 100000;\n    const posts = this.state.posts;\n\n    if (!typeof posts === \"undefined\" || posts.length == 0) {\n      return val;\n    }\n\n    for (let i = 0; i < posts.length; i++) {\n      const post = posts[i];\n\n      if (post.action == \"BUY\") {\n        val -= Number(post.quantity);\n      } else {\n        val += Number(post.quantity);\n      }\n    }\n\n    return val;\n  }\n\n  getBCVal() {\n    let val = 0;\n    const posts = this.state.posts;\n\n    if (!typeof posts === \"undefined\" || posts.length == 0) {\n      return val;\n    }\n\n    let bitcoins = 0;\n\n    for (let i = 0; i < posts.length; i++) {\n      const post = posts[i];\n\n      if (post.cryptoName == \"Bitcoin\") {\n        if (post.action == \"BUY\") {\n          bitcoins += Number(post.quantity) / Number(post.price);\n        } else {\n          bitcoins -= Number(post.quantity) / Number(post.price);\n        }\n      }\n    }\n\n    val = bitcoins * this.state.bcPrice;\n    return val;\n  } //make more getters with more cryptos\n\n\n  handleTypeChange(e) {\n    this.setState({\n      type: e.target.value\n    });\n  }\n\n  handleCryptoNameChange(e) {\n    this.setState({\n      cryptoName: e.target.value\n    });\n  }\n\n  onChangeQuantity(e) {\n    this.setState({\n      quantity: e.target.value\n    });\n  }\n\n  submit() {}\n\n  render() {\n    console.log(\"render\");\n\n    if (true) {\n      return /*#__PURE__*/_jsxDEV(this.renderNW, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 14\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"postDisplay\",\n      children: [/*#__PURE__*/_jsxDEV(Chart, {\n        lineSeries: this.state.bcLineSeries,\n        autoWidth: true,\n        height: 320\n      }, this.state.bcKey, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(this.renderNW, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Make a transaction\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"transtype\",\n          value: this.state.type,\n          onChange: this.handleTypeChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"BUY\",\n            children: \"BUY\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"SELL\",\n            children: \"SELL\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"$\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            id: \"quantity\",\n            required: true,\n            className: \"form-control\",\n            value: this.state.quantity,\n            onChange: this.onChangeQuantity\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 19\n          }, this), \"worth of:\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"selectedCrypto\",\n          value: this.state.cryptoName,\n          onChange: this.handleCryptoNameChange,\n          children: /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Bitcoin\",\n            children: \"Bitcoin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.submit,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Dashboard;","map":{"version":3,"sources":["/Users/work/Documents/GitHub/referall-project/frontend/src/components/dashboard.component.js"],"names":["React","Component","Link","Chart","TransactionStub","axios","Dashboard","constructor","props","bcws","WebSocket","updatePosts","bind","renderPosts","bcOnMessage","renderNW","render","handleTypeChange","handleCryptoNameChange","onChangeQuantity","submit","state","posts","bcLineSeries","data","bcData","bcPrice","bcKey","type","cryptoName","quantity","componentDidMount","user","localStorage","getItem","alert","length","window","location","href","onmessage","e","event","response","JSON","parse","utcMiliSec","E","d","Date","setUTCMilliseconds","temp","time","value","p","console","log","lineSeries","push","pastKey","setState","Number","post","then","res","catch","err","map","getCashVal","val","i","action","getBCVal","bitcoins","price","target"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {Link} from 'react-router-dom';\nimport Chart from 'kaktana-react-lightweight-charts'\nimport './dashboard.css';\nimport TransactionStub from './transaction-stub.component'\n\nimport axios from 'axios'\n//pass in viewed user, connection status, and id of user who is viewing\n\nclass Dashboard extends Component {\n  bcws = new WebSocket (\"wss://stream.binance.us:9443/ws/btcusdt@trade\");\n  constructor(props){\n    super(props);\n    \n    this.updatePosts= this.updatePosts.bind(this);\n    this.renderPosts = this.renderPosts.bind(this);\n    this.bcOnMessage = this.bcOnMessage.bind(this);\n    this.renderNW = this.render.bind(this);\n    this.handleTypeChange = this.handleTypeChange.bind(this);\n    this.handleCryptoNameChange = this.handleCryptoNameChange.bind(this);\n    this.onChangeQuantity = this.onChangeQuantity.bind(this);\n    this.submit = this.submit.bind(this);\n    this.state = {\n      posts : [],\n      bcLineSeries : [{\n          data: [\n              \n          ]\n      }],\n      bcData: [],\n      bcPrice: 0,\n      bcKey: 0,\n      type: \"BUY\",\n      cryptoName: \"Bitcoin\",\n      quantity: 0\n      \n\n    };\n    \n  }\n  \n  componentDidMount(){\n    const user = localStorage.getItem(\"userID\");\n    alert(user);\n    if (user.length ==0) {\n        alert(\"you are not logged in\");\n        window.location.href = '/login';\n    }this.bcws.onmessage = (e)=> this.bcOnMessage(e);\n    this.updatePosts();\n}\n  \nbcOnMessage(event){\n    var response = JSON.parse(event.data)\n    var utcMiliSec = response.E\n    var d = new Date(0)\n    d.setUTCMilliseconds(utcMiliSec)\n    var temp = {time: utcMiliSec, value: response.p}\n    var data = this.state.bcData;\n    console.log(data);\n    var lineSeries = this.state.bcLineSeries;\n    console.log(lineSeries);\n    data.push(temp);\n    var pastKey = this.state.bcKey;\n    lineSeries[0].data = data\n    this.setState({\n        bcData: data,\n        bcPrice: Number(response.p),\n        bcLineSeries: lineSeries,\n        bcKey: pastKey+1\n    })\n    \n}\nupdatePosts(){\n    const user = localStorage.getItem(\"userID\");\n  \n  \n   axios.post(\"http://localhost:5000/posts/byuser\", {user: user})\n       .then(function(res){\n         console.log(res);\n           this.setState({\n               posts: res.data.posts\n           });\n           console.log(this.state.posts);\n           \n       }.bind(this)) \n       .catch(err => console.log('Error: ' + err));\n}\n\n  renderPosts(){\n      const posts = this.state.posts;\n    if(typeof posts === \"undefined\"||posts.length==0){\n        return(<p>You have no transaction history</p>);\n    }return(<div>\n        {posts.map((post) =>\n            <TransactionStub post = {post} bcPrice={this.state.bcPrice}/>\n        )}\n    </div>)\n  }\n  renderNW(){\n    \n    return(<h4>Current Net Worth($100,000 starting):</h4>)\n  }\n  getCashVal(){\n    let val = 100000;\n    const posts = this.state.posts;\n    if(!typeof posts === \"undefined\"||posts.length==0){\n        return val;\n    }\n    for(let i = 0; i < posts.length; i++){\n        const post = posts[i];\n        if(post.action == \"BUY\"){\n            val -= Number(post.quantity);\n        }else{\n            val += Number(post.quantity);\n        }\n    }\n    return val;\n  }\n  getBCVal(){\n    let val = 0;\n    const posts = this.state.posts;\n    if(!typeof posts === \"undefined\"||posts.length==0){\n        return val;\n    }\n    let bitcoins= 0;\n    for(let i = 0; i < posts.length; i++){\n        const post = posts[i];\n        if(post.cryptoName == \"Bitcoin\"){\n          if(post.action == \"BUY\"){\n            bitcoins += Number(post.quantity)/Number(post.price);\n          }else{\n            bitcoins -= Number(post.quantity)/Number(post.price);\n          }\n        }\n        \n    }val = bitcoins * this.state.bcPrice;\n    return val;\n  }//make more getters with more cryptos\n  handleTypeChange(e){\n    this.setState({\n      type: e.target.value\n    })\n  }\n  handleCryptoNameChange(e){\n    this.setState({\n      cryptoName: e.target.value\n    })\n  }\n  onChangeQuantity(e){\n    this.setState({\n      quantity: e.target.value\n    })\n  }\n  submit(){\n\n  }\n  render() {\n    console.log(\"render\");\n    if(true){\n      return(<this.renderNW/>)\n    }\n    return (\n      <div id = \"postDisplay\">\n          <Chart lineSeries={this.state.bcLineSeries} key = {this.state.bcKey}autoWidth height={320} />\n            <this.renderNW/>\n            <div>\n                <h5>Make a transaction</h5>\n                <select id = \"transtype\" value={this.state.type} onChange={this.handleTypeChange}>\n                        <option value=\"BUY\">BUY</option>\n                        <option value=\"SELL\">SELL</option>\n                  </select>\n                  <p>$\n                  <input type=\"number\" id=\"quantity\" \n                        required \n                        className = \"form-control\" \n                        value = {this.state.quantity}\n                        onChange = {this.onChangeQuantity}/>\n                \n                worth of:</p>\n                <select id = \"selectedCrypto\" value={this.state.cryptoName} onChange={this.handleCryptoNameChange}>\n                        <option value=\"Bitcoin\">Bitcoin</option>\n                  </select>\n                \n                <button onClick = {this.submit}>Submit</button>\n                \n        </div>\n            \n            \n       \n      </div>\n    );\n  }\n}\n \nexport default Dashboard;"]},"metadata":{},"sourceType":"module"}